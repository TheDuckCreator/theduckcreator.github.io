<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-07-20T15:39:07+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">The Duck Creator</title><subtitle>The Duck Creator | เดอะดักส์ ครีเอเตอร์ Nobody-Wanted Creativing Studio , Not A Company It&apos;s Only A Space</subtitle><entry><title type="html">สร้าง Monorepo ของ JavaScript ด้วย Lerna กัน</title><link href="http://localhost:4000/it-blog/2024/01/28/create-monorepo-with-lerna.html" rel="alternate" type="text/html" title="สร้าง Monorepo ของ JavaScript ด้วย Lerna กัน" /><published>2024-01-28T00:00:00+07:00</published><updated>2024-01-28T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2024/01/28/create-monorepo-with-lerna</id><content type="html" xml:base="http://localhost:4000/it-blog/2024/01/28/create-monorepo-with-lerna.html"><![CDATA[<p>เคยมั้ยที่รู้สึกว่างานของเราเริ่มจะมีความใหญ่เกินไป การทำงานของระบบที่เป็น Client-Server ธรรมดาอาจไม่สามารถ Handle งานได้อย่างมีประสิทธิภาพ เราอยากจะขยายโปรเจกต์ แยกออกไปเป็น Service ต่างๆ แต่เราก็ไม่อยากเขียนโค้ดหลายชุด อยากใช้อะไรร่วมกัน วันนี้จะมาแนะนำกับ Tools ตัวหนึ่งที่ช่วยงานด้านนี้ได้ ก็คือ Lerna</p>

<h2 id="introduction">Introduction</h2>

<p>เริ่มต้นกลับมาเขียนอีกครั้งในรอบ 3 ปี แทบจะรันเว็บนี้ไม่เป็นแล้ว เนื่องจากว่าเมื่อวันเสาร์ที่ผ่านมา (27 มกราคม 2024) ผมได้มีโอกาสไปร่วม Bar Camp Songkhla ครั้งที่ 8 ที่ตึก LRC มหาวิทยาลัยสงขลานครินทร์มาครับ จริงๆ เตรียมเรื่องนี้ไว้ว่าจะไปเป็น Speaker แต่ไม่ค่อยชัวร์ว่าเรื่องมันเก่าแล้วหรือเปล่า รวมถึงไปครั้งแรก ยังทำตัวอะไรไม่ค่อยถูก เลยไม่ได้ยื่นไป แล้วเอามาใส่ไว้ในนี้แทน</p>

<h2 id="monorepo-คืออะไร">Monorepo คืออะไร</h2>

<p>Monorepo ก็คือ Monorepository นี่แหละครับ มันคือการเขียนโค้ดหลายหลายๆ ส่วนไว้ใน Repository เดียวกัน เช่นอาจจะมีทั้ง frontend, backend และ service ตัวนู้นตัวนี้รวมไว้ด้วยกัน ถ้าเป็น JavaScript ก็จะเป็นหลายๆ Packages รวมไว้ด้วยกัน จากที่กล่าวไว้ข้างต้น ในการเขียนโปรเจกต์ที่เริ่มใหญ่ขึ้น บางทีระบบอย่างผมทำเป็น Client-server อาจจะไม่สามารถทำงานได้เต็มที่แล้ว เช่น ระบบ HTTP มันอาจจะเป็น Short Job ซึ่งชอบทำงานสั้นๆ แต่หลายๆ Request ได้ แต่บางทีงานของเราอาจจะยาวจนระบบมันไม่พร้อมให้บริการตัวอื่นๆ ดังนั้นแอพแบบ Monolith อาจไม่เพียงพอต่อการจัดการ เราอาจจะต้องมี Service ที่มาจัดการตัวที่ทำงานยาวๆ มีให้มันต่อคิวต่าง ๆ นา ๆ ดังนั้นเราจำเป็นต้องสเกลแอพให้มันเป็น Microservices มากขึ้น</p>

<p>การขยายเป็น Microservice ต่างๆ แล้ว เราสามารถเลือกได้ว่าเราจะขยายเป็นหลายๆ Repository สำหรับทำก็ได้นะ หรือ เราจะรวมอยู่ใน Repository เดียวก็ได้ แล้วแต่ความถนัดและขนาดของระบบเลยครับ ใน Opensource งานใหญ่ๆ ก็จะเห็นว่าเขาก็แยกเป็นหลายๆ Repository เหมือนกัน แต่ถ้างานอยู่ในระดับไม่ใหญ่มาก คนทำไม่ได้เยอะมาก แล้วอยากเขียนให้เราใช้โค้ดบางส่วนด้วยกันได้โดยบริหารจัดการไม่ยาก การทำ Monorepo ก็เป็นหนึ่งในคำตอบที่หน้าสนใจเหมือนกัน</p>

<p>Monorepo มี Tools หลายๆ ตัวขึ้นอยู่กับแต่ละภาษาเช่น <a href="https://gradle.org/">Gradle</a> ถ้าใครเคยเขียน Android ก็จะเคยได้ยินมันอยู่ ตัวนี้เป็นของ Java, <a href="https://bazel.build/">Bazel</a> จะเป็นของ Google เขียนได้หลายภาษา, ตัว JavaScript ก็จะมี <a href="https://lerna.js.org">Lerna</a> ที่เป็นตัวเก่าแก่, <a href="https://nx.dev/">Nx</a> ซึ่งเป็นลูก และเป็นเจ้าของ Lerna อีกที หรือ <a href="https://turbo.build/repo/docs">Turborepo</a> ซึ่งผมยังไม่ได้ลอง ซึ่งทุกคนสามารถเข้าไปหา Tools อื่นๆ เกี่ยวกับ Monorepo ได้ที่ <a href="https://monorepo.tools/">monorepo.tools</a></p>

<h2 id="lerna">Lerna</h2>

<p>Lerna เป็น Libary ที่ค่อนข้าง Original มีมานานอยู่พอสมควร สำหรับการทำ Monorepo ใน JavaScript แต่ส่วนตัว ผมชอบมันมากกว่า Nx นะ ซึ่งเป็นอีกตัวที่ตอนนี้ก็เจ้าของเดียวกัน แต่ตัวอื่นยังไม่ได้ลอง Official Document ของมันอยู้ที่ <a href="https://lerna.js.org">lerna.js.org</a></p>

<h2 id="ทดลองใช้กันเถอะ">ทดลองใช้กันเถอะ</h2>

<p>เราจะมาทดลองใช้งานกัน โดยจะเป็น Frontend กับ Backend โดยเราจะใช้ Library Constant ที่เราสร้างร่วมกัน จะเป็นตัวอย่างง่ายๆ ในทางปฏิบัติจริงที่ผมใช้ ผมจะใช้เป็น Library หรือเป็น Code ของแต่ละ Module แยกจากกันเช่น โค้ดของ Manufacturing อยู่ Package หนึ่ง Code ของ Inventory อยู่อีก Package หนึ่งเป็นต้น แล้วก็ค่อยมีโค้ดตัวหลักที่อ่านจาก Library ตัวนี้มากอีกที เราจะมาเริ่มจากพื้นที่ปล่าวๆ กันเลย</p>

<h3 id="initial-project">Initial Project</h3>

<ol>
  <li>เราจะเริ่มจากการสร้าง Folder เปล่าๆ มาโฟลเดอร์หนึ่ง จากนั้นเราจะ Initial ด้วย <code class="highlighter-rouge">npm init -y</code></li>
  <li>
    <p>เริ่ม Install Lerna ด้วยคำสั่ง</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npx lerna init
</code></pre></div>    </div>

    <p>หลังจากนั้น มันก็จะมี packages ที่ชื่อว่า Lerna ขึ้นมาใน dependencies</p>
  </li>
  <li>
    <p>ระบุ Workspace ของเรา ว่าโฟลเดอร์ไหนที่เราจะให้เป็นโฟลเดอร์ที่เก็บแพคเกจต่างๆ ผมจะระบุว่าเป็นโฟลเดอร์ <code class="highlighter-rouge">packges/</code> โดยระบุเข้าไปใน Package.json ได้เลย</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"workspaces":[
  "packages/*
]
</code></pre></div>    </div>
  </li>
  <li>
    <p>เราจะสร้าง Package ขึ้่นมา 2 Packages ก่อน โดยจะเป็น Frontend และ Backend โดยสองอันนี้จะไม่ได้ขึ้นต่อกันก่อนนะ โดย Frontend ผมจะใช้ React ส่วน Backend ผมจะใช้ Express.js โดยผมเข้าไปใน packages แล้วสร้าง react ด้วย vite</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nb">cd </span>packages
  npm create vite@latest frontend <span class="nt">--template</span> react
</code></pre></div>    </div>

    <p>เมื่อเรียบร้อยแล้วต่อด้วย<code class="highlighter-rouge">cd frontend</code> และ <code class="highlighter-rouge">npm install</code></p>
  </li>
  <li>เลื่อนเคอร์เซอร์ออกมาข้างนอก แล้วเราจะสร้างแพคเกจสำหรับ Backend กัน โดยเราจะลง Express กับ Nodemon ซึ่งเป็นตัวที่ทำให้ Package ของเรารันแบบ demon ในขณะที่เรา Development นั่นเอง
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  cd ..
  mkdir backend
  cd backend
  npm init -y
  npm install --save express nodemon
</code></pre></div>    </div>
  </li>
  <li>
    <p>สร้างไฟล์แรก ผมจะตั้งชื่อว่า index.js ขึ้นมาสำหรับการ Handle API ธรรมดาเลย โดยผมจะใช้เป็น ES Module (แบบ import/export) นะครับ ดังนั้นผมจะตั้งใน package.json เป็น type: module ด้วย แต่ถ้าใครสะดวกจะเขียนเป็น commonjs ก็สามารถทำได้เลยนะครับ</p>

    <script src="https://gist.github.com/theethawat/0a45f0bbb18d7739a969035b41292249.js"></script>
  </li>
  <li>
    <p>เรามาดูใน package.json เราตั้งค่า script ตรงที่ dev ให้รัน <code class="highlighter-rouge">node index.js</code> ที่ผมตั้งไว้ที่ dev เพราะว่าจะให้มัน Script เดียวกันกับ frontend ที่ development ของระบบไว้ที่ dev เหมือนกัน (ลองเข้าไปในดูในไฟล์ package.json ของ frontend ได้ครับ) ลืมบอกไปครับว่า ชื่อใน name จะเป็นชื่อใน package ที่เราจะเรียกใช้โดย package อื่นๆ ได้นะครับ แต่อันนี้ผมไม่ได้ตั้งใจให้มันเป็น package library</p>

    <script src="https://gist.github.com/theethawat/5a24e3916e2d7b1a5c406ff7d89adbdb.js"></script>
  </li>
  <li>
    <p>ทีนี้กลับมาที่ package.json หลัก ใน project root ตั้งค่าสคริปต์ dev โดยให้สั่งไปที่ lerna run dev จากนั้นลองรันคำสั่ง npm run dev ดูครับ ทั้ง 2 แพ็คเกจก็จะเริ่มทำทั้งสองอันเลย</p>

    <script src="https://gist.github.com/theethawat/25f3202553e74c7813c590c1f02d417e.js"></script>
  </li>
</ol>

<h3 id="ทดลองสร้าง-constant-package">ทดลองสร้าง Constant package</h3>

<ol>
  <li>เราจะมาสร้าง constant package โดยสร้างโฟลเดอร์เข้าไปใน packages
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   cd packages
   mkdir constant
   cd constant
   npm init -y
</code></pre></div>    </div>
  </li>
  <li>
    <p>สร้างไฟล์ Constant แรกขึ้นมา ผมจะสร้างไฟล์ชื่อ workingStatus.js แล้ว import เข้าไปใน index.js (โดยผมจะใช้เป็น ES Module เหมือนกัน)</p>

    <script src="https://gist.github.com/theethawat/722996f9a59623f598485f9a41f59c0c.js"></script>
  </li>
  <li>
    <p>เข้าไปใน package.json ตั้งชือ package ที่เราต้องการ</p>

    <script src="https://gist.github.com/theethawat/cfbf7c3733d8847e28e9e384f0bd560f.js"></script>
  </li>
  <li>
    <p>เราจะ import เข้าไปใน frontend และ backend เราจะใส่ package ตังนี้ที่ผมตั้งชื่อว่า <code class="highlighter-rouge">@theethawat/lerna-demo-constant</code> เข้าไปใน package.json ของ frontend และ backend โดยใน backend ผมจะใส่ nodemonConfig ให้มัน watch ข้อมูลบน constant ด้วย เมื่อมีการเปลี่ยนแปลงโค้ดใน constant จากนั้นเรา <code class="highlighter-rouge">npm install</code> อีกครั้ง (ถ้ายังไม่ได้ให้ลองเข้าไปใน frontend และ install ทีนึง backend อีกทีนึง)</p>

    <script src="https://gist.github.com/theethawat/e4a3e64a5f36b1c185b91988d057eba2.js"></script>
  </li>
  <li>
    <p>เราลองตั้ง import จาก package ของเราเข้าไปใน backend ดูนะครับ อันนี้ผมใช้ VS Code ถ้าผมเคาะ Ctrl+Space bar ดูจะมี Hint ขึ้นมาช่วยแล้ว</p>

    <p><img src="/assets/lerna/1.png" alt="Hint ของ Lerna" /></p>
  </li>
  <li>
    <p>เราจะมา Log ดูว่า import ได้มั้ย</p>

    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">app</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">"</span><span class="s2">/</span><span class="dl">"</span><span class="p">,</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Working Status List</span><span class="dl">"</span><span class="p">,</span> <span class="nx">WORKING_STATUS</span><span class="p">);</span>
  <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hello World!</span><span class="dl">"</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div>    </div>

    <p>จะเห็นออกมาประมาณนี้ครับ</p>

    <p><img src="/assets/lerna/2.png" alt="Output of backend" /></p>
  </li>
  <li>
    <p>เช่นเดียวกัน เราจะลอง Import เข้าไปใน frontend ดูแล้วเราจะใช้ JSON.stringnify แสดง</p>

    <script src="https://gist.github.com/theethawat/e5e6d7dc9b6585a3e5072630471f2318.js"></script>

    <p>ภาพมันก็จะประมาณนี้</p>

    <p><img src="/assets/lerna/3.png" alt="Frontend import lerna" /></p>
  </li>
</ol>

<p>นี่ก็จะเป็นคร่าวๆ ของการ Implement Lerna ที่เป็น Monorepo นะครับ จริงๆ แล้วยังมีเรื่องของการ Deploy Package ลงบน NPM หรือ Package Manager อื่นๆ อีก แต่สำหรับบทความนี้ คงจะแค่นี้ก่อน ส่วนสไลด์ที่ผมเตรียมไว้ แต่ยังไม่ได้ใช้ สามารถดาวน์โหลดสไลด์ได้ที่นี่เลย <a href="/assets/lerna/Monorepo JS Using Lerna.pdf">ดาวน์โหลด Slide</a> สำหรับโค้ดที่ใช้ในบทความนี้ คลิกที่ Source Code ข้างล่างได้เลยนะครับ</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><category term="monorepo" /><category term="lerna" /><category term="javascript" /><summary type="html"><![CDATA[เคยมั้ยที่รู้สึกว่างานของเราเริ่มจะมีความใหญ่เกินไป การทำงานของระบบที่เป็น Client-Server ธรรมดาอาจไม่สามารถ Handle งานได้อย่างมีประสิทธิภาพ เราอยากจะขยายโปรเจกต์ แยกออกไปเป็น Service ต่างๆ แต่เราก็ไม่อยากเขียนโค้ดหลายชุด อยากใช้อะไรร่วมกัน วันนี้จะมาแนะนำกับ Tools ตัวหนึ่งที่ช่วยงานด้านนี้ได้ ก็คือ Lerna]]></summary></entry><entry><title type="html">มาสร้างการแจ้งเตือนไปที่ Line Notify กัน</title><link href="http://localhost:4000/it-blog/2021/02/21/line-notify-to-nodejs-app.html" rel="alternate" type="text/html" title="มาสร้างการแจ้งเตือนไปที่ Line Notify กัน" /><published>2021-02-21T00:00:00+07:00</published><updated>2021-02-21T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2021/02/21/line-notify-to-nodejs-app</id><content type="html" xml:base="http://localhost:4000/it-blog/2021/02/21/line-notify-to-nodejs-app.html"><![CDATA[<p>Line Notify จะเป็นอะไร ที่ค่อนข้างจะแตกต่างกับ Service ตัวอื่น ๆ ของ line developer เพราะ line notify อาจจะไม่ได้อยู่ใน line developer platform ดังนั้น จึงไม่จำเป็นต้องมี Developer Account ก็สามารถทำได้ โดยเข้าไปที่เว็บไซต์ <a href="https://notify-bot.line.me">https://notify-bot.line.me</a> แล้ว Login ด้วยบัญชี Line ของเรา</p>

<h2 id="รู้จักกับ-line-notify-service">รู้จักกับ Line Notify Service</h2>

<p>เมื่อเข้าไปที่ https://notify-bot.line.me แล้ว เราจะเห็น</p>

<p><img src="/assets/line-notify/1.png" alt="หน้าเว็บของ Line Notify" />
<strong><em>หน้าเว็บหลังจากเราเข้าไปที่ Line Notify</em></strong></p>

<p>มันจะมีหน้า My Page กับ Manage registered services สำหรับส่วนของ My Page จะเป็นสเตตัสว่า Line Notify Bot แต่ละตัว ทั้งที่เป็นของเราและไม่เป็นของเรา แต่ที่เรารับบริการอยู่ เช่น ในเช่นมี E-Online มี PostAlert ของทางไปรษณีย์ ส่วนหน้า Manage Registered Services นี่แหละ คือของจริง คือสิ่งที่เราจะสร้าง Notify Service ของเราขึ้นมา</p>

<p><img src="/assets/line-notify/2.png" alt="หน้า Manage Registered Service" /></p>

<h2 id="การสร้าง-service-บน-line-notify">การสร้าง Service บน Line Notify</h2>

<p>ทำการเลือก Add Service แล้วกรอกข้อมูลต่าง ๆ ใส่ URL ของ Service ของเรา เช่น ถ้าของเราเป็น theduckcreator.in.th ก็ใส่ไป ตรงนี้ มันไม่ได้มีผลเชิงเทคนิคมาก เป็นเพียงการให้มันขึ้นไปให้คนใช้รู้ เป็นเรื่อง Policy เฉยๆ ส่วนของ Representative คือ ตัวแทน ซึ่งสามารถเขียนชื่อเราลงไปได้</p>

<p><img src="/assets/line-notify/3.png" alt="Register for a new Service" />
<strong><em>หน้าการสร้าง Service ใหม่</em></strong></p>

<blockquote>
  <p>ส่วนที่สำคัญที่สุด คือ CallbackURL</p>
</blockquote>

<p>คือหลักการทำงานโดยทั่วไปกับ API ข้างนอก ไม่ว่าจะพวก Line พวก Facebook, Firebase หรื่อ อื่นๆ จะเป็นลักษณะเป็นการยิงข้อมูลและคำสั่ง ไปทำงานที่เซิฟเวอร์ของเขา แล้วเขาจะส่งผลลัพธ์กลับมาที่เซิฟเวอร์ของเรา ซึ่งเพื่อความปลอดภัย มันจะไม่ใช่ว่า ยิงกลับมาที่ End Point ตัวไหนก็ได้ของระบบเรา แต่เราจะต้องกำหนด White List หรือ Callback URL ที่เราจะอนุญาติให้ระบบของมัน ส่ง URL ที่เป็น URL ในกลุ่มนี้เข้ามาได้ ซึ่งแต่ละที่จะกำหนดแตกต่างกัน สำหรับ Line Notify จะให้ 5 ผู้ใช้</p>

<p>การทำงานกับ API ที่มีการยิงกลับ จำเป็นต้องทำงานบน Server เท่านั้น นั่นหมายความว่า React ที่เป็น Single Page App จะไม่สามารถทำงานคู่กับ API ได้ จำเป็นต้องทำที่ Backend แต่ถ้าเป็น Next.js, PHP, Laravel ซึ่งเป็นการผสมระหว่าง Backend และ Frontend อาจสามารถทำได้</p>

<h2 id="สิ่งที่จะได้มาหลังจากการลงทะเบียน">สิ่งที่จะได้มาหลังจากการลงทะเบียน</h2>

<p>เราจะได้ Client ID กับ Client Secret มา โดยคล้าย ๆ กับเป็น Public and Private Key Client ID มีสถานะเป็นสิ่งปกติ ที่ไม่เป็นความลับ แต่ Secret จะเป็นความลับ</p>

<p><img src="/assets/line-notify/4.png" alt="Client ID and Client Secret" />
<strong><em>Client ID และ Client Secret ที่ได้มา</em></strong></p>

<h2 id="การให้ผู้ใช้เข้าไปลงทะเบียนไว้กับ-line-notify">การให้ผู้ใช้เข้าไปลงทะเบียนไว้กับ Line Notify</h2>

<p>จะเป็นการทำประกอบกับ <a href="https://notify-bot.line.me/doc/en/">Official Document</a> ของ Line Notify</p>

<p>สร้างลิงค์โดยอาจจะใช้ Button, A หรือ GET Method ธรรมดา ที่ลิงค์ไปยัง URL ของระบบ Line Notify โดยให้มันไปที่ <a href="https://notify-bot.line.me/oauth/authorize">https://notify-bot.line.me/oauth/authorize</a> โดยเราจำเป็นที่จะต้่องใส่ Request Parameter ไปด้วย</p>

<p><img src="/assets/line-notify/5.png" alt="Request Parameter ที่ Line ต้องการ" />
<strong><em>Request Parameter ที่ Line ต้องการ</em></strong></p>

<p>วิธีการใส่ Request Parameter ใน GET Method นั้น เราสามารถใส่ได้หลายแบบ ถ้าเราใช้วิธีแบบ</p>

<ul>
  <li>ถ้าใชิวิธีแบบ กดปุ่มนี้ แล้วไปเรียก Action ให้ axios ไปทำงาน ตรงนี้เราอาจจะใช้ axios อาจจะใส่เป็น params ตามวิธีการของ <a href="https://github.com/axios/axios">Axios</a></li>
  <li>หรือ ถ้าเป็นง่าย ๆ Request param คือ หลังจาก URL แล้ว เราใส่ ?name=value ได้เลย และถ้ามีหลาย ๆ อันก็ขึ้นด้วยเครื่องหมาย &amp; ตัวอย่างเช่น ต้องการเข้าไปที่เว็บไซต์ theduckcreator.in.th โดยมี <code class="highlighter-rouge">parameter</code> ว่า <code class="highlighter-rouge">clientid</code> เป็น 10 <code class="highlighter-rouge">connecttype</code> เป็น <code class="highlighter-rouge">travel</code> จะเขียนแบบนี้ <code class="highlighter-rouge">https://theduckcreator.in.th?clientid=10&amp;connecttype=travel</code></li>
</ul>

<p>ในระบบนี้ของ Line Notify ก็เช่นกัน เราต้องใส่</p>

<ul>
  <li>
    <p><strong>response_type</strong> ซึ่งมันบังคับว่าให้เราใส่ว่า code ใส่ client id</p>
  </li>
  <li>
    <p><strong>redirect_uri</strong> (ซึ่งต้องเป็น 1 ใน 5 URL ที่เขาให้เรากำหนด)</p>
  </li>
  <li>
    <p><strong>state</strong> ในที่นี้คือ <strong><em>เราจะใส่อะไรก็ได้</em></strong> ถามว่า ทำไมต้องเป็นแบบนี้ เพราะว่า state มันจะเป็นค่าที่ Line Notify เว้นไว้ให้เราว่า เราต้องการข้อมูลอะไรรึเปล่า ที่เราตกลงกันไว้เอง เช่น เรากำหนดว่า state คือ ไอดีของ User ในแอพ หรือ อะไรก็แล้วแต่ เพราะว่า ค่าตรงนี้ มันจะส่งกลับมาด้วย เมื่อเวลามันทำงานสำเร็จแล้วตีกลับมาตาม Redirect URL ซึ่งเราสามารถเขียนโปรแกรม เช็คได้ว่า ถ้าสเตทเป็นค่านี้ให้ทำยังไง หรือพูดง่าย ๆ ว่ามันคือตัวแปรว่างๆ ให้เราจะเอาไปทำอะไร เพื่อประโยชน์ของเรา ในการพัฒนาส่วนต่อไป</p>
  </li>
</ul>

<p>ตัวอย่างเช่น</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const url = 'https://notify-bot.line.me/oauth/authorize?response_type=code&amp;client_id=7ZmMC5mkpC0xxxW5x&amp;redirect_uri=https://theduckcreator.in.th/notifyredirect&amp;scope=notify&amp;state=' + userid
</code></pre></div></div>

<h2 id="การเตรียมการรับการตอบกลับจาก-line-notify">การเตรียมการรับการตอบกลับจาก Line Notify</h2>

<p>เมื่อเราให้ User ของเรา ไป Login ที่ Line Notify แล้ว เมื่อทำรายการสำเร็จ Line Notify จะยิงกลับมาที่เว็บไซต์ของเรา นั่นหมายความว่า เราต้องเตรียมไว้รอรับด้วย โดย Line จะส่ง code กับ state มา <strong>code</strong> จะเป็น ข้อมูลชัวคราว อันนึง เหมือนเป็นรหัสของ Transaction การที่ user ไปขอรับการ notify อันหนึ่ง แล้วนำไปใช้ในขั้นตอนถัดไป <strong>code ไม่ใช่ access</strong> token เรายังต้องทำขั้นตอนต่อไปอีก เพื่อให้ได้ access token</p>

<p>อย่างที่บอกไป เราสามารถใช้ state ช่วยได้ เราอาจจะกำหนดว่า state คือ user id ของผู้ใช้ก็ได้ แล้วพอค่ากลับมา เราก็ไปอัพเดท Record ของ user id นี้ ในตาราง user ก็ได้</p>

<h3 id="การเตรียมรับการตอบกลับใน-expressjs">การเตรียมรับการตอบกลับใน Express.js</h3>

<p>ถ้าเขียน Server ด้วย Nodejs Express นั้น เราต้องเตรียม route สำหรับการตอบกลับของ line notify โดยระบบของ line จะตอบกลับมาโดยใช้ GET Method สมมติว่าเราจะใช้ตอบกลับมาที่ URL https://theduckcreator.in.th/api/notifyredirect เราก็ต้องสร้าง route ของ notifyredirect เอาไว้</p>

<script src="https://gist.github.com/theethawat/dd54324552e84441ee8318b155d3ef01.js?file=NotifyAPIRecieve.js"></script>

<p>แล้วก็ถอดค่า request_parameter ที่ระบบได้ส่งมาด้วยนั้น ออกมา เช่น ระบบส่ง <code class="highlighter-rouge">code</code> และ <code class="highlighter-rouge">state</code> เป็น parameters มาด้วย เราก็จะใช้ <code class="highlighter-rouge">req.query</code> ในการดึงออกมาว่ามันคือค่าอะไร</p>

<h2 id="การยืนยันกลับไปที่-line-notify-ว่าเราได้รับ-code-จาก-line-notify-แล้ว">การยืนยันกลับไปที่ Line Notify ว่าเราได้รับ Code จาก Line Notify แล้ว</h2>

<p>ยังไม่จบ ขึ้นสุดท้ายของการลงทะเบียนรับผู้ใช้ใหม่ของ Line Notify หลังจากเราให้เขายิงไปที่ URL ของ Line Notify แล้วนั้น Line Notify จะยิง GET Request เอา Code มาบอกเรา สุดท้าย คือเราจะต้องยืนยันว่า โอเค เรารับคนนี้เข้าระบบเรานะ และเราคือเซิฟเวอร์ที่ลงทะเบียนไว้จริง ๆ เหมือนเป็นการเซ็นยืนยัน และการยืนยันเราจะยืนยันด้วยอะไรนั้น</p>

<p>ข้างต้น เราได้เขียนบอกแล้วว่าเราจะได้ client id กับ client secret ซึ่ง Client Secret จะเป็นข้อมูลความลับ เราใช้ Client ID เป็นส่วนหนึ่งของ Request Parameter ที่ให้ไปบอกกับ Line แล้ว การกระทำที่เราให้ User Redirect ไปหน้าของ Line เหมือนเป็นการให้เขาส่งจดหมายไปหา Line ว่า เขาต้องการรับ Notify จากระบบนี้นะ ช่วยออกโค้ดให้ฉันหน่อย จากนั้น Line ออก Code มาให้ และให้ระบบของเรายืนยันว่า มีคนขอรับการแจ้งเตือนมา เราอนุญาติรึเปล่า ถ้าเราอนุญาติ เราก็ปั้มตราด้วย Client Secret ของเราไป</p>

<p>การส่งไป Verify อาจจะยากเล็กน้อย เพราะว่าเรากำลังส่งข้อมูลที่มีความลับไป ดังนั้นจึงต้องส่งเป็น POST และ มันยังเพิ่มความปลอดภัย ด้วยการให้ส่ง Data เป็น <strong>application/x-www-form-urlencoded</strong> เพื่อเป็นการเข้ารหัสอีกครั้ง</p>

<h3 id="การส่งการยืนยันผ่าน-server-ทีเป็น-express">การส่งการยืนยันผ่าน Server ทีเป็น Express</h3>

<p>สำหรับระบบที่เป็น Node.js Express.js เราจะไม่ได้เขียนแบบ POST axios ปกติ เพราะเราจำเป็นต้องบอกด้วยว่า เรากำลังส่งค่าเป็น application/x-www-form-urlencoded และยังต้องส่ง data เป็นแบบ encode แล้ว เราจะใช้ <code class="highlighter-rouge">qs</code> เป็น 1 ตัวช่วย</p>

<p>Import Library qs เข้ามา ไม่แน่ใจว่าจะต้อง install ก่อนหรือไม่</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const qs = require('qs')
</code></pre></div></div>

<p>Define Data ให้เรียบร้อย ตาม Format จาก Official Documents สังเกตุว่าเขาจะให้เราส่ง code, clientid, client secret ไปด้วย</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> // Request to LINE Authenthication Server
  const url = 'https://notify-bot.line.me/oauth/token'
  const jsonData = {
    grant_type: 'authorization_code',
    code: accessCode,
    redirect_uri: 'https://theduckcreator.in.th/api/notifyredirect',
    client_id: config.lineNotify.clientID,
    client_secret: config.lineNotify.clientSecret,
  }
</code></pre></div></div>

<p>จากนั้นเรามาทำเป็น config หรือ options ที่จะสั่งโปรแกรมของ axios</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> const requestOption = {
    method: 'POST',
    headers: { 'content-type': 'application/x-www-form-urlencoded' },
    data: qs.stringify(jsonData),
    url,
  }
</code></pre></div></div>

<p>และเราก็ส่งการให้ axios ทำการยิง POST Request ตัวนี้</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> axios(requestOption)
    .then(async (lineRes) =&gt; {
     ...
     })
</code></pre></div></div>

<p>สิ่งที่เราจะได้กลับมาถ้ามันถูกต้อง ก็คือ Access Token ส่วนนี้สำคัญมาก เพราะมันคือสิ่งที่เราจะเข้าถึง User คนนี้ ตัวระบบ Line เอง ไม่รู้ว่า User Id ของ User แต่ละคนเป็นยังไง</p>

<p><img src="/assets/line-notify/6.png" alt="รูปแบบของข้อมูลที่ Line Notify จะส่งกลับมา" />
<strong><em>รูปแบบของข้อมูลที่ Line Notify จะส่งกลับมา</em></strong></p>

<p>เราต้องเขียนต่อใน then เลย ที่จะเช็คว่าสถานะของ Response (จากการ POST) ที่ Line ตอบกลับมาที่เราเป็นยังไง และถ้ามันเป็น 200 นั่นแสดงว่า เราได้ access_token ติดมาด้วย เราก็เก็บ access_token นี้ ติดกับ user นี้ใน Database ได้เลย เราจะต้อง code จากส่วนที่แล้วนะ</p>

<script src="https://gist.github.com/theethawat/dd54324552e84441ee8318b155d3ef01.js?file=NotifyDatapost.js"></script>

<h2 id="การแจ้งเตือนไปยังผู้ใช้-เมื่อมีอะไรเกิดขึ้้น">การแจ้งเตือนไปยังผู้ใช้ เมื่อมีอะไรเกิดขึ้้น</h2>

<p>เมื่อสักครู่ ที่เขียนไป จะเป็นการจดทะเบียนผู้ใช้เข้าระบบ ต่อไปนี้ จะกล่าวถึงการส่ง Notify ไปที่ Line ของ User แล้ว ยังคงเหมือนเดิม คือ เราจะต้องส่งผ่าน Server ของเราที่เราได้ Register กับ line ไว้ในขั้นตอนข้างต้น ไม่สามารถส่งผ่าน Client ได้ เราจะยิง axios ไปจาก Client ไม่ได้ ถ้าต้องการ ให้ ยิงมาที่ Server ก่อนแล้วค่อยให้ Server ยิงต่อ เป็นต้น โดยเรายังต้องส่งเป็น POST และ ข้อมูลยังคงเป็น application/x-www-form-urlencoded โดยมีขั้นตอนดังต่อไปนี้</p>

<p>เริ่มจากการเตรียม Data ที่จะส่งไปที่ Line ของผู้ใช้ Line กำหนดว่า ข้อมูลที่เป็น Text จะเขียนไว้ใน key ที่ชื่อว่า message</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const url = 'https://notify-api.line.me/api/notify'
      const jsonData = {
        message: `สวัสดีครับ คุณติน มีคนสั่งซื้อสินค้าในร้านเดอะดักส์ของเรา ราคารวม ${
          order.allPrice
        } บาท ครับ`,
      }
</code></pre></div></div>

<p>จากนั้้นเราไปดึงเอา Access Code ออกมา อาจจะดึงมาจาก Database หรือ ที่อื่น ในที่นี้ สมมติว่าเรามีข้อมูลอยู่แล้ว</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      const accessCode = shopinfo.shop_notification_code
</code></pre></div></div>

<p>แล้วเราก็ทำการส่ง POST ไปที่ Server ของ Line Notify ซึ่งตรงนี้จะไม่ได้ส่งแบบเดิมอีกแล้ว เราจะส่งโดยมี <strong>Authorization Header</strong> ซึ่ง Line เลือกใช้เป็นแบบ Bearer Token โดยให้ส่ง access token ของเรานี่แหละ เป็น Bearer Token โดยวิธีการส่ง Header ไปผ่าน axios ก็จะคล้ายๆ กับ การส่งบอกว่า Content Type เป็นยังไง โดยเราจะสร้าง Option หรือ config ของตัว axios ดังนี้</p>

<script src="https://gist.github.com/theethawat/dd54324552e84441ee8318b155d3ef01.js?file=RequestOption.js"></script>

<p>จากนั้นเราก็จะให้ axios มา Run ตาม config นี้</p>

<script src="https://gist.github.com/theethawat/dd54324552e84441ee8318b155d3ef01.js?file=NotifyInject.js"></script>

<p>ก็จะถือว่าสิ้นสุดการส่งการแจ้งเตือนไปยังผู้ใช้งาน</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><category term="api" /><category term="line" /><category term="line-notify" /><summary type="html"><![CDATA[Line Notify จะเป็นอะไร ที่ค่อนข้างจะแตกต่างกับ Service ตัวอื่น ๆ ของ line developer เพราะ line notify อาจจะไม่ได้อยู่ใน line developer platform ดังนั้น จึงไม่จำเป็นต้องมี Developer Account ก็สามารถทำได้ โดยเข้าไปที่เว็บไซต์ https://notify-bot.line.me แล้ว Login ด้วยบัญชี Line ของเรา]]></summary></entry><entry><title type="html">มา Deploy API Server บน Azure App Service โดยใช้ GitHub Actions กัน</title><link href="http://localhost:4000/it-blog/2020/06/14/deploy-app-to-azure-appservice.html" rel="alternate" type="text/html" title="มา Deploy API Server บน Azure App Service โดยใช้ GitHub Actions กัน" /><published>2020-06-14T00:00:00+07:00</published><updated>2020-06-14T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2020/06/14/deploy-app-to-azure-appservice</id><content type="html" xml:base="http://localhost:4000/it-blog/2020/06/14/deploy-app-to-azure-appservice.html"><![CDATA[<p>การ Deploy งานของเราใน Platform as a Service ค่อนข้างได้รับความนิยมขึ้นมากในโลกปัจจุบัน แทนที่ของการเอาไปลงแบบ IaaS ซึ่งจริง ๆ ถามว่าอะไรง่ายกว่าเนี่ย ก็อยู่ที่คนถนัดนะครับ เพราะตอนผมเองเริ่มต้น Deploy ใน IaaS ผมเองก็ใช้เวลาน้อยกว่าการทำบน PaaS แต่ด้วยการจัดการความคุ้มค่าต่องบประมาณ (Cost Effectiveness) และการที่เทรนด์การแยกแต่ละส่วนของระบบเป็น Microservice เพื่อการบริหารจัดการที่ง่ายกว่า ทำ CI/CD ได้ง่ายกว่า กำลังได้รับความนิยม ทำให้การปล่อยของบน PaaS ได้รับความนิยมขึ้นเรื่อย ๆ เช่นกัน</p>

<h3 id="content">Content</h3>

<ul>
  <li><a href="#paas-ใน-node.js-app">PaaS ใน Node.js App</a></li>
  <li><a href="#มาเริ่มสร้าง-resource-กัน">มาเริ่มสร้าง Resource กัน</a></li>
  <li><a href="#deploy-with-github-actions">Deploy With GitHub Actions</a></li>
  <li><a href="#เช็คงานใน-azure">เช็คงานใน Azure</a></li>
</ul>

<h2 id="paas-ใน-nodejs-app">PaaS ใน Node.js App</h2>

<p>จริง ๆ แล้วก็มีหลายผู้ให้บริการเลย ที่เปิดพื้นที่ให้ปล่อยของกันสำหรับใครที่ทำ Node.js และต้องการปล่อยบน PaaS เช่นอย่าง <a href="https://www.heroku.com/">Heroku</a> ที่จะได้รับการพูดถึงเป็นอย่างแรก ๆ แล้วผมก็จะไปลองดูและเปรียบเทียบเหมือนกัน หรืออย่างของใหม่มาแรงอย่าง <a href="https://vercel.com">Vercel</a> ซึ่งผมเองก็ใช้ในการ Deploy เว็บส่วนตัวผมเหมือนกัน <a href="https://theethawat.theduckcreator.in.th">Theethawat Personal Site</a> ซึ่งเดิมชื่อว่า Zeit Now ใช้ง่ายมาก ๆ คุณภาพอย่างดี นอกจากนั้นยังมีที่เราสามารถประยุกต์ไป Host App ได้ เช่น Firebase, Github Pages หรือบริการ App Service ในผู้ให้บริการ Cloud อย่างทั้ง AWS และ GCP และที่ผมกล่าวมาทั้งหมดนี้ มีบริการฟรี สำหรับคนที่จะเข้าไปเล่นระดับผมอยู่แล้ว</p>

<h3 id="azure-web-apps">Azure Web Apps</h3>

<p>ในบทความนี้จะมาบอกถึงการใช้ Platform Azure App Service / Azure Webapp ของ Microsoft Azure ซึ่งผมเองก็ไม่ได้บอกว่ามันดี ราคาดี หรือ ง่ายกว่าที่กล่าวมานะ (อาจจะด้อยกว่าในบางเรื่องด้วยซ้ำ) แต่พอดีพอเสิร์จเรื่องนี้ บทความภาษาไทยยังมีไม่ค่อยมากเท่าไหร่ ดังนั้น เออคงมีคนอ่านบ้างแหละ บทความนี้คงมีประโยชน์บ้าง และเผื่อใครที่ใช้ Stack ของ Azure อยู่แล้ว จะหาที่ปล่อย Node.js App ให้มันอยู่ในบริการเดียวกัน</p>

<blockquote>
  <p>ที่มาทำพวกนี้ เรากำลัง Cost Effective อยู่คร้าบ หลังจากเครดิต Azure เรารั่วไปกับ Application Gateway กับ Virtual Gateway ของ Azure นี่แหละ ไหลรวม ๆ 2 วัน กินไปเกือบ 25 US$ ผมนี่รีบลบอย่างไว หมดตูดแล้ววว ตอนนี้เราเลยมาหาวิธีถูก ๆ หรือวิธีฟรี ๆ เล่นกัน</p>
</blockquote>

<h3 id="แอพที่จะมา-deploy">แอพที่จะมา Deploy</h3>

<p>ก็จะเป็น App ทำ Open REST API ธรรมดา ๆ นี่แหละครับ เขียนกับ Javascript Node.JS + Express แล้วมีการเชื่อมข้อมูลจาก MongoDB Cluster ที่รันอยู่บน Cloud ของ Mongo DB Atlas ครับ</p>

<p><img src="/assets/az-app-services/appcode-preview.png" alt="บางส่วนของ Code App ที่จะมา Deploy" />
<strong><em>ตัวอย่างโค้ดในแอพครับผม</em></strong></p>

<p>แต่ผมจะมีการเอาข้อมูลที่เป็น Sensitive Data ออกมาอยู่ในไฟล์ <code class="highlighter-rouge">.env</code> นะครับ แล้วใช้ package <code class="highlighter-rouge">dotenv</code> เข้าไปดึงข้อมูลเหล่านี้มานะครับ ในเครื่องที่เรารันแอพ หรือ ทดสอบ เราใส่ไฟล์ <code class="highlighter-rouge">.env</code> ไปเลย แต่ใน server เราจะ deploy ผ่าน Source Code ใน GitHub จึงไม่ค่อยดีเท่าไหร่ที่เราจะปล่อยพวก Sensitive Data เหล่านี้ เราจะเก็บไว้ในบริการที่ Server ทำให้ จะกล่าวถึงต่อไปครับ</p>

<hr />

<h2 id="มาเริ่มสร้าง-resource-กัน">มาเริ่มสร้าง Resource กัน</h2>

<p>เราจะติ๊งต่างว่าเราได้เขียนโค้ดและเทสบนเครื่องของเราเรียบร้อยแล้วนะครับ เราจะมาเริ่ม Deploy โดยเราจะให้เป็นการส่ง Continuous Delivery มาจาก <a href="https://github.com/features/actions">GitHub Action</a> เราก็จะเริ่มจาก Push โค้ดที่เราเขียนแล้ว มาที่ GitHub กันเลยครับ ถ้าเป็น Public Repository ส่วนนี้จะฟรีทั้งหมดนะครับ</p>

<h3 id="สร้าง-resource-ใน-azure">สร้าง Resource ใน Azure</h3>

<p>หลังจากนั้นเราจะเริ่มมาที่ Azure Portal หรือ ใครจะถนัด CLI ก็แล้วแต่เลยครับ เราจะมาเริ่มการสร้าง โดยไปที่่ New Resource หรือ Marketplace ก็ได้ แล้วหาคำว่า Web Apps จากนั้นเราก็มา Setting Resource ของเรากันเลย</p>

<p><img src="/assets/az-app-services/1-Search-Marketplace.png" alt="ค้นหาใน Marketplace" />
<strong><em>ค้นหา Web App หรือจะพิมพ์ App Service ในการสร้าง Resource ใหม่</em></strong></p>

<p><img src="/assets/az-app-services/3-Runtime-Stack.png" alt="Config Runtime Stack" />
<strong><em>ตั้งค่า Name ที่จะกลายไปเป็น URL เลือก Runtime Stack, OS, ที่ตั้งของ Server, วิธีการจะ Publish ลงไป</em></strong></p>

<p>ในที่นี้จะใช้ Node.js Version 12 LTS และจะเลือกรันบน Linux นะครับ เพราะว่าผมเองเคยลองเลือกรันบน Windows มาแล้ว ใช้ยากมาก Windows เอาไว้รัน Dotnet App แล้วกัน (หรือภาษาอื่น ๆ ก็ได้นะครับ) ที่ตั้งผมจะเลือกเป็น Southeast Asia และจะส่งไปเป็น Code นะครับ ใครจะตั้งเป็นอย่างไร สุดแล้วแต่เลยครับ</p>

<p><img src="/assets/az-app-services/4-Default-Size.png" alt="Default App Size" />
<strong><em>App Service Plan และ Size ของ Application เริ่มแรก</em></strong></p>

<p>App Service Plan นี่เราต้องมีอยู่แล้วละนะ ถ้าใครไม่มีก็ให้มันสร้างใหม่มาแบบผมก็ได้ มันจะเอาไว้ช่วยบริหารจัดการพวกราคาต่าง ๆ ให้เรา ตัวเริ่มต้นเราไม่ต้องเสียเงินอยู่แล้วนะครับ แต่ตัวสำคัญคือ SKU and Size ครับ มีหลายอันให้เราเลือก แต่ที่ผมจะใช้ เราจะใช้แบบ Dev/Test F1 Basic ที่เป็นแบบฟรีก่อนครับ เขาจะมีแรมให้ 1GB และให้เรา Compute ได้ 60 นาทีต่อวัน</p>

<p><img src="/assets/az-app-services/5-Select-Size.png" alt="Select wanted Size" />
<strong><em>เลือก Size ของ Applicaion ตามที่เราต้องการ โดยเราสามารถเพิ่มหรือลดได้ภายหลัง</em></strong></p>

<p>จากนั้นเราก็ Review และ Create เลย</p>

<h3 id="ดูผลงานและเตรียมการ-deploy">ดูผลงานและเตรียมการ Deploy</h3>

<p>หลังจากที่เรา Create ได้แล้ว เราจะเข้ามาที่ Dashboard ของ Web App ของเรา เราจะเห็นข้อมูลต่าง ๆ เช่นพวก IP ที่ได้ Dynamic Allocation มา Status, Package ต่าง ๆ และเราสามารถที่จะกด Browse เพื่อที่จะไปที่ URL ที่เราสร้างขึ้นมา</p>

<p><img src="/assets/az-app-services/7-Dashboard.png" alt="Azure Web App Dashboard" />
<strong><em>หน้าสรุปข้อมูลของ App Service ที่เราสร้างขึ้นมา</em></strong></p>

<p><img src="/assets/az-app-services/8-Browse.png" alt="Basic Browse App" />
<strong><em>หน้า Web Application ที่ขึ้นมาโดยที่ยังไม่ได้ Push อะไรลงไป</em></strong></p>

<hr />

<h2 id="deploy-with-github-actions">Deploy With GitHub Actions</h2>

<p>เราจะ Deploy มันด้วย GitHub Actions ถึงแม้มันจะเป็น Preview อยู่ใน Azure แต่เนื่องจากงานของเราไม่ได้ Production อะไรมาก เราก็จะใช้นะ ถ้าใครใช้งาน Production จริง ๆ อาจจะลองหาวิธีอื่นดูนะครับ</p>

<h3 id="setup-deployment-source">Setup Deployment Source</h3>

<p>ไปที่ Deployment Center ครับ จากนั้นเราเริ่มจากการเลือกว่า Source Code ของเรานั้นอยู่ในตัวจัดการ Repository อันไหน มีทั้ง Azure Repos, GitHub, Bitbucket หรือ Local Git ในที่นี้ผมจะเลือกเป็น GitHub นะครับ จากนั้นมาถึงส่วนสำคัญคือเลือก Build Provider เราจะเลือด <strong>GitHub Action</strong> ครับ</p>

<p><img src="/assets/az-app-services/9-Repo-Source.png" alt="Repository Source" />
<strong><em>การเลือกผู้ให้บริการเก็บ Repository</em></strong></p>

<p><img src="/assets/az-app-services/10-Build-Provider.png" alt="Build Provider" />
<strong><em>เลือกวิธีในการ Build Source Code โดยที่นี้จะเลือก GitHub Actions</em></strong></p>

<p>เราทำการ Config ต่าง ๆ นะครับ เช่น Repository ชื่ออะไร Build Environment จะเป็นอย่างไร จากนั้นมันจะ Generate YAML File ที่เอาไว้เป็น Workflow ให้เราครับ เราไม่ต้องคัดลอก แล้วไปใส่ใน Repository เรานะครับ มันจะจัดการให้เอง โดยจะอยู่ในโฟลเดอร์ <code class="highlighter-rouge">.github/workflows</code> ซึ่งต่อไปเมื่อเรา Pull Repository นั้นมา เราก็จะเอามาแก้ไขไฟล์ Workflow ใน Editor ของเราได้ หรือจะแก้ไขใน UI ของ GitHub เลยก็ได้ครับ</p>

<p><img src="/assets/az-app-services/12-Workflow.png" alt="GitHub Action Workflow" />
<strong><em>Workflow ที่เราได้เพื่อไป Build ใน GitHub Actions</em></strong></p>

<h3 id="ตรวจงาน-build-ใน-github">ตรวจงาน Build ใน GitHub</h3>

<p>GitHub จะทำการ Build ให้เราตาม Workflow ที่เราให้ ทุก ๆ ครั้งที่เรา Commit หรือ ที่เราตั้งค่าไว้ ถ้าหากมี Log อะไรระหว่างการ Build หรือมี Error มันก็จะขึ้นมาในตัว GitHub มีให้ Badge ด้วยนะว่า Build สำเร็จหรือไม่ โดยเราจะออกจาก Azure แล้วไปที่ GitHub Repository ของเราเลย</p>

<p>เมื่อเราไปที่ Repository และเราทำการ Commit ใหม่ (ที่จริงการ Add Workflow ก็เป็นการ Commit แล้วนะ) มันก็จะเริ่ม Build โดยที่ มันจะขึ้นอยู่ที่แถบด้านบนของ Repository นั้น</p>

<p><img src="/assets/az-app-services/13-Commit-Action-1.png" alt="Workflow Running Status" />
<strong><em>สัญลักษณ์ที่แสดงผลว่า Workflow กำลังทำงานอยู่</em></strong></p>

<p>เราสามารถคลิกตรงนั้น หรือ คลิกไปที่ <strong>Actions</strong> ด้านบนก็ได้ แล้วเราจะเห็นผลงานที่เราทำไว้ ใน Workflow ก่อน ๆ ใน Repository นี้ (ถ้าเริ่มทำครั้งแรกมันก็จะยังมีแค่อันเดียวนี่แหละ อันนี้ Deploy มาหลายครั้งแล้ว)</p>

<p><img src="/assets/az-app-services/14-Commit-Action-2.png" alt="GitHub Action Workflow Result List" />
<strong><em>List งานที่ GitHub Actions ทำให้เรา</em></strong></p>

<p>คลิกเข้าไปที่ Event นั้น ๆ เราจะเห็นว่าตอนนี้เขากำลังทำในขึ้นตอนไหนอยู่ ผลการ Run เป็นยังไงบ้าง จากนั้นพอมันเสร็จแล้ว มันจะ Push ไปที่ Azure</p>

<p><img src="/assets/az-app-services/15-Action-Running.png" alt="GitHub Action Working Process" />
<strong><em>งานที่ GitHub Actions กำลังทำให้เราอยู่</em></strong></p>

<hr />

<h2 id="เช็คงานใน-azure">เช็คงานใน Azure</h2>

<p>เมื่อเรา Build ผ่าน มีการ Push ไฟล์มาที่ Azure App Service แล้ว ทีนี้มันก็จะเอา Code ของเรานี่แหละ ไปทำการ Deploy โดยถ้ามันจะเสมือนรันคำสั่ง <code class="highlighter-rouge">npm start</code> กล่าวคือ มันจะทำงานตามคำสั่งที่เราเขียนให้กับ Script Start ใน <code class="highlighter-rouge">package.json</code> ดังนั้นเราก็ดูให้ดีนะว่าเราได้สร้าง Production Build ไว้หรือเปล่า ถ้าอยากให้มันรันจาก Production Build เราจะเขียนคำสั่งยังไง ถ้าต้องการให้มันรันแบบนั้นแบบนี้จะต้องใส่คำสั่งใด เป็นต้น</p>

<blockquote>
  <p>Azure App Service จะถือเอาคำสั่งใน <code class="highlighter-rouge">package.json</code> ตรงที่ start เป็นคำสั่งที่จะใช้ในการดำเนินการ</p>
</blockquote>

<h3 id="เช็คการ-commit-งาน">เช็คการ Commit งาน</h3>

<p>เราสามารถเช็คสถานะการส่ง CI/CD จาก GitHub มาที่ Azure ได้โดยเปิดไปที่ Deployment Center</p>

<p><img src="/assets/az-app-services/17-Deployment-Status.png" alt="Azure App Service Deployment Status" />
<strong><em>เช็คสถานะการส่งขึ้นมา Deploy ที่ Deployment Center</em></strong></p>

<p>ถ้าใครสถานะที่ดี และไม่มีการกำหนด Environment Variable อะไร ก็ลองไป Browse หน้าเว็บดูได้นะ แต่ถ้าใครที่มี Environment Variable เหมือนเรา ยังก่อน เราจะมาแก้ Environment เราก่อน</p>

<h3 id="ตั้งค่า-environment-variable">ตั้งค่า Environment Variable</h3>

<p>เราจะไปตั้งค่าสิ่งเดียวกับที่เราเก็บไว้ในไฟล์ <code class="highlighter-rouge">.env</code> บนเครื่อง โดยเราจะไปที่ <strong>Configuration</strong> และใส่ Application String เข้าไป</p>

<p><img src="/assets/az-app-services/18-ENV-Dash.png" alt="App Service Configuration" />
<strong><em>หน้า Config Environment Variable</em></strong></p>

<p><img src="/assets/az-app-services/19-Edit-ENV.png" alt="Environment Variables Configuration" />
<strong><em>การใส่ หรือ แก้ไข Environment Variable โดยจะเป็นลักษณะของ Key-Value</em></strong></p>

<p>จากนั้น เราสามารถไปเช็คงานเราใน Website ของเรา หรือผ่านช่องทางอื่น ๆ ซึ่งอยากบอกว่ามันไม่ได้ Take Effect ทันทีนะ หรือไม่ก็อาจจะมี Cache ของบราวเซอร์ หรือ อื่น ๆ ด้วย พอร์ตต่าง ๆ ที่ให้แสดงออกดูให้ดีด้วยนะครับ รู้สึกว่าเขาจะตั้ง Default ไว้ที่ 8080 แล้วมันจะ Mapping มาที่ 80,443 หรือวิธีหนึ่งที่จะทำให้รู้ข้อผิดพลาด คือไปที่ <strong>Diagnose and Solve Problem</strong> แล้วเข้าไปดู Application Log ก็ได้นะ</p>

<hr />

<h2 id="บทส่งท้าย">บทส่งท้าย</h2>

<p>ก็ถือว่าวิธีนี้เป็นวิธีหนึ่งนะครับ อาจจะมีรายละเอียดปรีกย่อยค่อนข้างมากหน่อย หรือ การจัดสเปค แพ็คเกจ ค่าใช้จ่าย ที่อาจจะมีค่ายอื่นที่เป็นพื้นที่ให้ Deploy Node.JS Application โดยตรงทำได้ได้เปรียบกว่าบ้าง (อย่างโดยส่วนตัวคิดว่า Vercel ง่ายกว่า ประสิทธิภาพดีกว่า แถมใช้ Domain ตัวเองได้ด้วย มี Cert Gen ให้อีกต่างหาก แต่เครื่องมือบางส่วนทางนี้อาจจะมีมากกว่า) แต่วิธีนี้ก็เป็นอีกวิธีหนึ่งนะครับ</p>

<p>มีข้อดีคือเราสามารถบริหารจัดการร่วมกับ Resource อื่น ๆ และ ใช้ Command Line ในการทำพวก Deploy Infrastructure, Scale, Autoscale หรือ อื่น ๆ ได้ และเริ่มต้นที่ไม่ต้องเสียค่าใช้จ่ายใด ๆ และใช้ได้ค่อนข้างเยอะนะ ยังไง ๆ ใครมีประสบการณ์ คำแนะนำอะไร บอกมาได้นะครับ ส่วนเราเหลือแต่ Heroku ตัวนึงที่ได้รับความนิยมมาก แต่ผมยังไม่ได้ลองใช้ ไว้จะลองเล่นดูนะครับ</p>

<p>สามารถใช้ API ตัวนี้ของผมได้ที่ <a href="https://theethawat-api.azurewebsites.net/">Theethawat API</a> และสามารถดู Doc ของ API และ Source Code ได้ที่ <a href="https://github.com/theethawat/personal-data-api">GitHub</a> Repository นี้เลยครับ</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><category term="api" /><category term="azure" /><summary type="html"><![CDATA[การ Deploy งานของเราใน Platform as a Service ค่อนข้างได้รับความนิยมขึ้นมากในโลกปัจจุบัน แทนที่ของการเอาไปลงแบบ IaaS ซึ่งจริง ๆ ถามว่าอะไรง่ายกว่าเนี่ย ก็อยู่ที่คนถนัดนะครับ เพราะตอนผมเองเริ่มต้น Deploy ใน IaaS ผมเองก็ใช้เวลาน้อยกว่าการทำบน PaaS แต่ด้วยการจัดการความคุ้มค่าต่องบประมาณ (Cost Effectiveness) และการที่เทรนด์การแยกแต่ละส่วนของระบบเป็น Microservice เพื่อการบริหารจัดการที่ง่ายกว่า ทำ CI/CD ได้ง่ายกว่า กำลังได้รับความนิยม ทำให้การปล่อยของบน PaaS ได้รับความนิยมขึ้นเรื่อย ๆ เช่นกัน]]></summary></entry><entry><title type="html">1 ปีกว่ากับโปรเจกต์ที่ไม่รู้ว่ามีอะไร และ ไม่รู้ว่าจะออกมายังไง</title><link href="http://localhost:4000/it-blog/2020/06/05/senior-project-talk.html" rel="alternate" type="text/html" title="1 ปีกว่ากับโปรเจกต์ที่ไม่รู้ว่ามีอะไร และ ไม่รู้ว่าจะออกมายังไง" /><published>2020-06-05T00:00:00+07:00</published><updated>2020-06-05T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2020/06/05/senior-project-talk</id><content type="html" xml:base="http://localhost:4000/it-blog/2020/06/05/senior-project-talk.html"><![CDATA[<p>เคยมั้ยครับที่เราเองก็ไม่รู้ว่าตอนจบ ไม่สิ ตอนต่อไปของเรื่องจะเป็นยังไง เราจะเจออะไรบ้าง เราจะมีความสุข จะทุกข์ จะอะไรก็ตามที่เราจินตนาการไม่ถูก ถ้าเรายังไม่เห็นมัน</p>

<p>ผมเองก็เป็นเหมือนกัน และเป็นบ่อยด้วยในช่วงที่เราต้องเจออะไรใหม่ ๆ ทั้งตอนไปฝึกงาน ที่ตอนนั้นเขียน Postcard ไปที่บ้านของตัวเองเพื่อจะอ่านตอนฝึกงานเสร็จ เพราะคือไม่รู้เลยว่าเราจะเจออะไรบ้าง และอีกอย่างนึงก็คือ โปรเจกต์ผมเนี่ยแหละ โอเคก่อนแหละเรารู้ว่าเราจะได้อะไรมา เพราะมันคือผลลัพธ์ของโปรเจกต์ แต่เราไม่รู้เลยว่า เราต้องเขียนโค้ดยังไง ทำอะไรบ้าง จนกว่าเราจะได้มันมา แน่นอนนะครับในการเขียนบทความนี้ผมจะไม่ให้กระทบใครอยู่แล้ว อ่านแล้วก็อาจจะมึน ๆ หน่อยนะครับ เพราะคนเขียนตอนเขียนก็มึน</p>

<h2 id="e-health-for-personal-sensor-application">E-health for Personal Sensor Application</h2>

<p><img src="/assets/senior-project/measurement.jpg" alt="ภาพไอ้ผมคนนี้กำลังทดลองใช้อุปกรณ์ต่าง ๆ อยู่" /></p>

<p>นี่คือชื่อโปรเจกต์ของผมครับ หลายคนอาจจะไม่ทราบว่ามันคืออะไร ซึ่งผมเองก็อยากบอกว่า เออ มันก็งงจริง ๆ นั่นแหละ อ่าว แต่แปลง่าย ๆ เลยครับจากหลังมาหน้า คือ แอพพลิเคชั่น ที่ใช้ในการรวบรวมสุขภาพส่วนบุคคล จากตัวรับรู้ (เซนเซอร์) ต่าง ๆ ซึ่งในรายงานเอง ผมเองยังมองว่าคำว่าเซนเซอร์ อาจไม่เข้าใจมากนัก บางจุด ผมเลยเขียนว่าอุปกรณ์ดูแลสุขภาพมากกว่า มันคือการรับค่าจากอุปกรณ์ดูแลสุขภาพต่าง ๆ เข้ามาแสดงผลที่แอพพลิเคชั่น โดยไม่จำกัดบริษัท (จริง ๆ ก็จำกัดแหละ แต่ไม่ได้หมายความว่าทำให้ทำงานกับอุปกรณ์บริษัทใดบริษัทหนึ่ง) จริง ๆ มันก็คือจำกัดอยู่ดี อ่าว งงตัวเอง</p>

<p><strong>แต่ทั้งหมดนี้ทำได้หมดแล้ว</strong> อ้าวแล้วอะไรเนี่ย มันคือมวยล้มต้มคนดูหรือเปล่าเนี่ย ผมก็ถามตัวเองเหมือนกัน เนื่องจากมันเป็นโปรเจกต์ต่อยอด แล้วให้ผมทำอะไร ผมถามไป แล้วคุณจะทำอะไร ผมได้รับคำถามกลับมา</p>

<h3 id="เออนั่นแหละ-แล้วอยากจะทำอะไรหละ">เออนั่นแหละ แล้วอยากจะทำอะไรหละ</h3>

<p><img src="/assets/senior-project/com-photo.jpg" alt="คอมพิวเตอร์ของผม" />
<strong><em>แชะภาพเพื่อนรักของผม น้องคอมเราเอง</em></strong></p>

<p>ใช่ครับ เพราะนี่คือโปรเจกต์ของผม ผมอยากจะทำอะไรก็ได้ อาจารย์บอกว่าอาจารย์เป็นที่ปรึกษา และ กรรมการ ที่จะให้คะแนนตามสิ่งที่คุณทำ คุณคิดว่ามันมีปัญหาอะไรบ้าง อยากจะทำอะไรกับมันบ้าง ทำอะไรแล้วคิดว่ามันมีประโยชน์บ้าง เขาอนุญาติให้ใช้ Library ใดก็ได้ หรือ ใช้ Source Code ของโปรแกรมที่มีอยู่ได้ ใช่ส่วนของโปรแกรมได้ แต่สุดท้ายคุณต้องรายงานออกมาว่าสิ่งที่คุณทำคืออะไร งานของคุณอยู่ที่ไหน</p>

<p>เออ พูดไปพูดมา ย่อหน้าที่ผ่านมา เอามาประยุกต์เป็นคำคมได้เลยนะเนี่ย</p>

<p>อยากจะบอกตรง ๆ ว่าเราใช้เวลาหลายเดือนมากทั้งใน Prepare Project และใน Project 1 ในการเคลียร์เรื่องดังกล่าวข้างบนนี้ เนื่องจากผมเองก็ยังไม่คิดเป็นระบบเท่าไหร่ ดังนั้นการเข้าใจให้ได้ข้อความในย่อหน้านี้ แม้ตอนพิมพ์จะใช้เวลาเพียง 3-4 นาที แต่ในการทำ กระบวนการ คลุ่มเวลากว่า 6 - 7 เดือน</p>

<h2 id="การทำโจทย์ที่-ยัง-ไม่มี-solution">การทำโจทย์ที่ (ยัง) ไม่มี Solution</h2>

<p>หลังจากนั้น ซึ่งจริง ๆ มันก็คือ ระหว่างนั้นนั่นแหละ ถึงแม้โปรเจกต์ยังไม่มี Scope ทั้งหมด แต่มันก็มีอะไรให้ทำ และเยอะด้วย นั้นก็คือส่วนการแก้ข้อผิดพลาด ของอุปกรณ์ 1 ใน 4 อุปกรณ์ ที่มีการทำงานพลาดอยู่ จากการทดสอบของผม และ เพื่อนผมด้วย ว่ามันไม่ได้จริง ๆ ถึงแม้อาจารย์จะยืนยันว่าได้ จนถึงวันนี้ที่ผมจะซ่อมได้แล้ว ผมก็ยังหาเหตุผลอยู่ว่า เพราะอะไรกันแน่ ที่ทำให้ตัวนี้ผิดพลาดไป เหตุผลที่ผมคิดว่าน่าจะใช่ที่สุดก็คือ การเปลี่ยนชนิดของ Database แต่โอเคแหละ เมื่อไม่รู้ ผมก็ต้องพยายามหา และ พยายามแก้</p>

<p>การแก้งานตรงนี้ แม้จะมีพื้นที่ประมาณ 1 ใน 4 ของรายงานและการนำเสนอ เทียบกับฟีเจอร์อื่น ๆ แต่กินเวลา 3 ใน 4 ของทั้งหมด ผมเองก็เริ่มเรียนรู้วิธีที่จะแก้ปัญหาตรงนี้ เอ้ ผมจะทำยังไงดี เพราะมันเป็น Stack ที่ค่อนข้างจะยาก มีทั้ง Android with Kotlin, ReactiveX, Dagger2 และ อื่น ๆ</p>

<p>ส่วนนี้ผมยกให้ ReactiveX (RxJava2) เป็นพระเอกเลยเอา ส่วน Dagger ผมเองพยายามเลี่ยง เท่าที่เลี่ยงได้ เพราะสำหรับผมรู้สึกว่า เห้ย ทำไมมันยากจังวะ เทียบกับส่วนอื่น ๆ ที่ทำด้วย Rx และทำด้วยไลบารี่อื่น ๆ ที่มันเห็นภาพ และมี Document ค่อนข้างดี แน่นอนเป็นโชคดีที่ผมไม่ต้องไปเกาะกับตัว Dagger มากนัก เพราะสิ่งที่ผมทำมันอยู่ใน Class ซึ่งมันก็มีการ Dependencies Injector นั่นแหละ แต่เราไม่ต้องไปแตะมันมาก แค่รู้ว่า เออ มันทำงานยังไง และมันทำให้เกิดอะไรขึ้น ส่วนที่ผมเขียนเองนี่ ผมยอมรับว่าผมไม่แตะ Dagger2 เลย ใครสนใจ Rx ลองไปดูได้ <a href="http://reactivex.io">ReactiveX</a></p>

<h3 id="เพราะมันไม่ใช่การบ้านทั่วไปที่เราทำ">เพราะมันไม่ใช่การบ้านทั่วไปที่เราทำ</h3>

<p>อย่าว่าเฉลยตายตัวเลย เฉลยอ้อม ๆ ยังไม่มีเลย เสร็จแล้วยัง ทำไมไม่ทำให้เสร็จ ๆ ไป ก็มันคิดไม่ออกอ่ะปัดโถ่ หลังจากทำงานนี้ไปซักพัก คุณจะพบว่างานเอย การบ้านเอย โค้ดเล็ก ๆ เอย มันง่ายไปเลย เพราะว่ามันมี start และ end ของมัน มันมีขอบเขต มี Milestone มีจุดที่รู้ว่ามันคือ Solution ของมัน แต่ตอนนี้เราต้อง define Start,End,Milestone และ Solution ต่าง ๆ เองทั้งหมด</p>

<h3 id="เอ้าไล่โค้ดไป">เอ้าไล่โค้ดไป</h3>

<p><img src="/assets/senior-project/process-photo.jpg" alt="ภาพแผนผังงานของโปรแกรมที่ผมพยายามแกะออกมา" /></p>

<p><strong><em>ตอนแรกก็มีการมานั่งวาดผังงานอยู่เหมือนกันนะ ใช้ Visio เลย แต่ตอนหลัง ก็ไม่รู้ว่าเรามานั่งวาดไปทำไมว้าา เขียนธรรมดาก็ได้ สุดท้ายทั้งหมดนี้ไม่ได้ใช้ครับ เอาไว้โชว์อาจารย์เฉย ๆ 555</em></strong></p>

<p>ผมใช้วิธีการไล่โค้ดใน Android Studio ไปเรื่อย ๆ ครับ ตอนนั้นผมยังใช้เครื่องมือ Debug ไม่เป็น เหมือนตอนนี้ ผมใช้วิธีการคลาสสิกก็คือ พ่น Log ออกมาเรื่อย ๆ ให้รู้ว่าปัญหามันอยู่ครงไหน และอีกอย่างคือ โปรแกรมมันเดินทางยังไง ซึ่งพูดดูมันเหมือนง่าย แต่จริง ๆ มันไม่ง่ายเลยเพราะว่าคนเริ่มต้นเขียน Android อย่างผม มาเจอกับโครงสร้างโค้ดที่ซับซ้อน แต่โคตร Clean เลย (ซึ่งนี่คือโชคดีของผม)</p>

<p>ถ้าจะเล่าประสบการณ์ที่ผ่านมาทั้งหมดคงไม่ได้หรอก ไม่ใช่อะไร เดี๋ยวมันจะยาวเกิน หรือ ไม่ก็พิมพ์ไม่ไหว แต่อยากจะบอกว่ารู้มั้ยตอนที่ผมแก้มาจนได้เห็นระบบมันรับข้อมูลครั้งแรกได้ โอ้ย ผมแทบอยากจะกระโดดให้ลั่นห้อง</p>

<p><img src="/assets/senior-project/filter.jpg" alt="หนึ่งในกระบวนการฟิลเตอร์ข้อมูล" />
<strong><em>โต๊ะที่ผมทำงานและสไลด์วิธีการฟิลเตอร์ข้อมูลที่ผมคิดว่า เออ ใช้วิธีนี้แหละ</em></strong></p>

<p>ผมเองพบว่าปัญหามันเกิดจาก 2 ส่วน ข้อมูลที่มันเป็นสตรีมของอุปกรณ์ตัวนี้ แต่ตัวอื่น ๆ ข้อมูลมันเป็นดิสครีต แน่นอนเราจะเก็บสตรีมที่มาเรื่อย ๆ ในรูปของดิสครีตก็คงไม่ได้ ทำได้เพียง เลือกจุดที่เหมาะสมที่สุดในสตรีม เป็นตัวแทนของข้อมูลสตรีมนั้น อีกส่วนคือ ระบบยังไม่สามารถ detect ได้เนี่ยเองว่า อุปกรณ์นี้นะ มันให้ค่าที่ระบบต้องการได้นะ You ไปเก็บข้อมูลสิ</p>

<p>นั่นคือ Part แรกของโปรเจกต์ครับ พาร์ทที่ใหญ่ที่สุด แต่งานที่ออกมาอาจจะดูเล็ก ๆ</p>

<h2 id="แล้วเราจะ-report-อะไร">แล้วเราจะ Report อะไร</h2>

<p>ต่อให้ Backend ดีแค่ไหน ถ้าเข้าใช้ไม่ได้ ถ้าได้แค่ดูค่า มันก็ไม่รู้ว่าจะเอาไว้ใช้ทำอะไรสินะครับ แล้วกับระบบที่ผมทำไม่ค่อยดีเท่าไหร่แล้วด้วย ดังนั้นงานผมจึง… เดี๋ยว ยังไม่เสร็จ</p>

<p>ในส่วนต่อไปคือการทำ Frontend หรือ ส่วนของ Report ต่าง ๆ เป็นความไม่ถูกต้องของการเขียนโปรแกรมคอมพิวเตอร์ของผมอีกอันหนึ่งแหละครับ ก็คือการทำ UI เสมือน แอพใหม่ครอบลงแอพเก่า เนื่องจากผมเองบอกตั้งแต่ต้นว่าไม่อยากจะจับ Dagger หรือ ReactiveX ถ้าไม่จำเป็นอีก โถ.. โชคดีที่การวางแอพพลิเคชั่นเดิมของพี่เขาดีมาก คือการตัดขาดกันเลยสำหรับส่วนที่รับข้อมูล กับ ส่วนแสดงผลข้อมูล ซึ่งมีตัวที่แยกจากกันก็คือ ฐานข้อมูล (Database) ด้านบนผมได้บอกมาแล้วว่ามันคือ Cloud Firestore ใช่มั้ยครับ แต่นั่นคือสิ่งที่ผมรู้ หลังจากผ่านอะไรมาเยอะแล้ว</p>

<h3 id="โอ้ข้อมูล-เจ้าอยู่ที่ไหน">โอ้ข้อมูล เจ้าอยู่ที่ไหน</h3>

<p><img src="/assets/senior-project/me-and-mycom.jpg" alt="รูปผมกับคอมพิวเตอร์ที่ใช้ทำงาน" />
<strong><em>แชะรูปกับโต๊ะโปรเจกต์หน่อย</em></strong></p>

<p>มันเป็นความผิดพลาด และความบ้าบอของเราเองด้วยส่วนหนึ่ง ฮา.. ที่ทำไมไม่ถาม แต่จริง ๆ น่าจะเป็นเพราะมั่นใจมาตลอดมากกว่าว่าข้อมูลเนี้ยเก็บอยู่ในตัวเครื่อง ที่เรียกว่า Room Database จะเห็นได้ว่าผมเองได้เขียนบทความเกี่ยวกับ Room Database เอาไว้ด้วย เพราะว่าตอนนั้นเรากำลังโฟกัสตรงนี้มาก ๆ ผมทั้งทำ Demo Fragment ที่ดึงข้อมูลออกมาจาก DB ดึงหมดบ้าง Specific บ้าง โดยใช้หลักการเข้าถึงของ Kotlin Coroutines &amp; Live Data นะครับ (ตอนแรกว่าจะทำแบบดึงจาก RxJava แบบที่พี่เขาทำ สุดท้าย เออวิธีนี้แล้วกัน) ผมค้นยังไง เอ้ มันก็ไม่เจอ เอ้ ผิดตรงไหนป่าวว่ะ</p>

<blockquote>
  <p>เออ นอกจากนี้แล้ว เรายังทำ Note การทำ Android ผ่าน Coroutines, LiveData ลงในบล็อกด้วยนะ ดูที่นี่เลย <a href="https://www.theduckcreator.in.th/tin-android-docs/">Tin Android Doc</a></p>
</blockquote>

<p>ผมเองก็จำไม่ได้เหมือนกันว่าผมคิดได้ตอนไหน หรืออะไรมันมาดลใจให้ผมเปลี่ยนใจไปที่ Firebase คือ ผมไม่ทราบว่าผมไปเจอโค้ดส่วนไหนเข้า จึงรู้ว่า เห้ยหรือว่าข้อมูลมันเก็บบน Firebase ว่ะ ผมเลยลองดึงข้อมูลจาก Firebase เอ้าเห้ย ปรากฏการณ์มหัสจรรย์ ได้เฉย</p>

<p>คืออยากบอกก่อนนะว่า ตอนนั้นผมยังไม่ได้มีสิทธิในการเข้าถึง Firebase Console ในเว็บ หรือ ในที่ใดก็แล้วแต่ ผมเองเลยไม่ทราบตรงนี้ ตอนนั้นผมใช้ Credential ที่มันฝังอยู่ในแอพอยู่แล้วในการเชื่อมต่อไป แต่ตอนนี้ผมขอเข้าถึงแล้วนะ</p>

<h3 id="firebase-ให้หมด-">Firebase ให้หมด ?</h3>

<p>บอกก่อนนะครับ ว่ามันไม่ใช่หนทางที่ดีเท่าไหร่ (หรืออาจจะไม่ดีเลย) ที่ผมเห็นว่าในเมื่อข้อมูลทั้งหมดอยู่บน Cloud Firestore แล้ว ก็เก็บข้อมูลอื่น ๆ ลงใน Firestore ด้วยสิ ในความคิดของผมตอนนั้นก็คือ เราจะได้ให้ข้อมูลที่เป็น Application Logic มันเปลี่ยนได้ง่าย ซึ่งตอนนี้ผมพิสูจน์แล้วว่า เออ ผมคิดผิด แต่ตอนนี้ตัวแอพก็ยังทำงานโดยใช้หลักการนี้อยู่นะครับ</p>

<p><img src="/assets/senior-project/covid-escape.jpg" alt="ติดป้ายขออนุญาติกลับบ้าน หนี COVID-19" />
<strong><em>ตอนนั้นติดป้ายหนีโควิดเอาไว้ บอกว่าจะลาแค่อาทิตย์เดียว จนถึงบัดนี้ ยังไม่ได้กลับไปถอดป้ายเลยจ้า</em></strong></p>

<p>ในการ Indicate ข้อมูลสุขภาพว่าอยู่ในระดับปลอดภัย เสี่ยง อันตราย และ Fetch คำแนะนำให้กับผู้ใช้ อย่างแรกเลยใช่ไหมครับมันต้องมีเกณฑ์ ซึ่งผมเองเลือกเก็บเกณฑ์ไว้ใน Online เกือบทั้งหมด (ซึ่งจริง ๆ ส่วนนี้มันควรจะเก็บบนเครื่องอาจจะดีกว่า ) ถ้าไม่นับ Cache ที่ Cloud Firestore เก็บไว้ในโทรศัพท์อัตโนมัติให้ผมแล้ว (ซึ่งมันน้อยนะ มันเก็บนั่นแหละ แต่มันไม่ได้สามารถไว้ใจได้ขนาดนั้น ผมไว้ใจมันเกินไป) เราจะต้องดึง Logic พวกเกณฑ์การจำแนกทั้งหมด จาก Internet ทุก ๆ ครั้ง ที่จะมีการวิเคราะห์ หรือ ทุก ๆ ครั้งที่เราจะแสดง Data แสดงกราฟ ที่มีเส้นขีดอันตราย ขีดเสี่ยงด้วยเนี่ย เราจะต้องใช้เวลาที่นาน และอาจจะบอกว่า เราใช้ Bandwidth ในการลิงค์กับ Server โดยป่าวประโยชน์ไปรึเปล่านะ ด้วยซ้ำ และแน่นอนถึงมันจะช้าเพียงแค่ไม่กี่วินาที แต่มันก็เพียงพอที่จะทำให้ Logic ใน App ของผม คาดเคลื่อนได้ และ มันก็เกิด Deadlock ขึ้นมาด้วย</p>

<p>การทำตรงนี้ คงต้องประเมินให้ดี ๆ นะครับ ว่าส่วนไหนควรเก็บเป็น Application Logic Hard Code ไปเลย ควรเก็บใน Internal Database หรือควรเก็บใน External Database มันต้องแบ่งกันให้ดีกว่านี้อ่ะครับ</p>

<h3 id="แล้วต้องเพิ่มฟีเจอร์อะไรอีก">แล้วต้องเพิ่มฟีเจอร์อะไรอีก</h3>

<p>ถามว่าแค่นี้พอหรือไม่ คงไม่ต้องถามหรอกครับ มันยังคงดูน้อยไปไงครับในรูปของ Senior Project โชคดีครับที่ผมได้ไปเจอข้อมูลของ NHES (National Health Examination Survey) ครั้งล่าสุดของไทย จากกรมควบคุมโรค ในเว็บของกองโรคไม่ติดต่อ ซึ่งทำไว้ในปี 2557 มันจะมีข้อมูลเปิดเผยที่เป็นสถิติประชากร เกินความชุคโรค ค่าเฉลี่ยของตัวชี้วัดทางสุขภาพต่าง ๆ พอให้ผมได้เอามาใช้บ้างกับแอพพลิเคชั่น โครงงานของผม เลยดูพอมีประโชยน์บ้าง</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/n3t4zmdihQ0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<p>นี่เป็นวีดีโอพรีเซนต์นะครับ ในโพสที่เขียนมานี้อาจจะไม่ค่อยมีสาระอะไรเท่าไหร่ เล่าความรู้สึกเสียมากกว่า ในรายละเอียด ดูที่วีดีโอได้เลยครับ</p>

<h2 id="รายงานเสร็จแล้วยัง">รายงานเสร็จแล้วยัง</h2>

<p>เสียงของพ่อผมเรียกมา ในหลาย ๆ ครั้ง หลังจากเห็นผมบ่นเรื่องนี้เป็นปี 5555 จริง ๆ มันไม่ใช่รายงานนะ มันคือโครงงาน แต่ก็ช่างเถอะ พ่อผมเรียกแบบนี้ไปแล้ว ผมเองก็อยากให้มันเสร็จนะ แต่โดยสภาพของเทคโนโลยี โอเค เราส่ง แต่งานเราก็ยังไม่เสร็จอยู่ดี ถึงแม้ไม่มีสัญญา Maintenance อะไร แต่มันก็เป็นสัญญาที่ให้ไว้แล้วท่ามกลางการสอบ เอ้า ไปสัญญาอะไรไว้หละ โอเค โปรเจกต์อ่ะส่งได้ แต่ท้ายที่สุด งานที่มันจะใช้ได้จริง ๆ ไม่ใข่ผลจากโครงงานหรอก เพราะ งานเราอาจถูกจำกัดด้วยเวลา และความสามารถอันเล็กน้อยของเราในตอนนั้น แต่เวลาใช้งานจริง ๆ ของแอพพลิเคชั่น หรือ ผลผลิตของ Developer ทั้งหลาย มันก็เหมือนกับลูกที่เราต้องไปคอยแก้บั๊ก ขจัดตัดแต่ง ให้มันใช้งานกับผู้ใช้งานได้ แล้วผมก็หวังว่า ผมจะทำ Production Version ออกมาได้ เร็ว ๆ นี้</p>

<p>เอ้าเพลงมา เราจะทำตามสัญญา….. (เออ ผมว่าเราจบบทความนี้แค่นี้ดีกว่านะครับ)</p>

<p><img src="/assets/senior-project/dook.jpg" alt="ดุก แมวที่ภาควิชา" />
<strong><em>ไอดุกครับ แมวที่ภาควิชา ชอบมานอนหน้าห้องบ่อย ๆ</em></strong></p>

<p>และต่อให้ออก Production และ Maintenance ก็คงต้องตามเก็บไปเรื่อย ๆ หากมีใครใช้แล้ว ประสบปัญหา หรือ Complaint มา แต่อย่างไรก็ดี ถ้ามันมีประโยชน์กับใครซักคน ผมว่า ผมก็คงภูมิใจนะ</p>

<p>ใช้กับใครดีหละ อะไรนะ ใช้กับเรานี่แหละ ได้ข่าวว่าอ้วนจังแล้ว</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><category term="healthcare" /><category term="android" /><category term="project" /><summary type="html"><![CDATA[เคยมั้ยครับที่เราเองก็ไม่รู้ว่าตอนจบ ไม่สิ ตอนต่อไปของเรื่องจะเป็นยังไง เราจะเจออะไรบ้าง เราจะมีความสุข จะทุกข์ จะอะไรก็ตามที่เราจินตนาการไม่ถูก ถ้าเรายังไม่เห็นมัน]]></summary></entry><entry><title type="html">การใช้ Room Database เบื้องต้นใน Android</title><link href="http://localhost:4000/it-blog/2019/10/15/roomdatabase.html" rel="alternate" type="text/html" title="การใช้ Room Database เบื้องต้นใน Android" /><published>2019-10-15T00:00:00+07:00</published><updated>2019-10-15T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/15/roomdatabase</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/15/roomdatabase.html"><![CDATA[<p>การจัดเก็บข้อมูลเป็นสิ่งสำคัญสำหรับทุก ๆ การพัฒนาแอพพลิเคชั่น สำหรับแอนดรอยด์ มันมี By Default อยู่แล้วคือ SQLite Database ซึ่งเป็นฐานข้อมูลแบบ Relational Database วันนี้ผมจะเอาประสบการณ์ที่ผมไปทำใน Code Lab มาอธิบายการทำงานคร่าว ๆ ของ Room Persistance Library หรือ Room Database กัน</p>

<h2 id="room-persistance-library">Room Persistance Library</h2>

<p>Room Persistance Library จะเป็นตัวสร้าง Database ขึ้นมา เรียกว่า Room Database จากนั้นผู้พัฒนาแอพพลิเคชั่นไม่จำเป็นต้องติดต่อกับฐานข้อมูลโดยตรง แต่จะใช้วิธีการสร้าง Data Access Object หรือ DAO เข้ามาแทน</p>

<p>การใช้ Room Database นี้เราสามารถเขียนได้บน Android ทั้งภาษาจาวา และ คอทลิน แต่ที่จะทำนี้จะใช้ภาษา Kotlin เป็นหลักก่อน ที่ผมเขียนเป็นบทความ เพราะเอาไว้โน้ตของผมเองด้วยนะ กลัวจะลืม</p>

<p><img src="/assets/android/roomdb.jpg" alt="Room Database Architecure" /></p>

<p>หมายเหตุ ที่จะมาเล่านี้อ้างอิงจาก Android with Kotlin Fundamental Course ใน Google Codelab นะครับ สามารถเข้าไปดูและเรียนได้ ฟรี</p>

<h2 id="สร้างโปรเจกต์-และจัดการ-buildgradle">สร้างโปรเจกต์ และจัดการ Build.Gradle</h2>

<p>เริ่มจากสร้างโปรเจกต์ใน Android Studio แล้วทำการเพิ่ม dependency ลงไปใน Build.gradle ใน Module “app” การเพิ่ม dependency ลงไป มันก็คล้าย ๆ กับการติดตั้ง Library ต่าง ๆ เหมือนใน Node.js ก็จะมี npm install อันนี้ก็คล้าย ๆ กัน โดยเราจะต้องมา define ก่อนว่า จะเอา roomDB เวอร์ชั่นไหน จะได้เป็นตัวแปล จะได้ไม่ต้องเขียนซ้ำหลายครั้ง</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    dependencies {
        def room_version = "2.2.0"

        //Room Database
        implementation "androidx.room:room-runtime:$room_version"
        annotationProcessor "androidx.room:room-compiler:$room_version"

        //Kotlin Exentension for room
        implementation "androidx.room:room-ktx:$room_version"

        //.....Dependencies อื่น ๆ ....
    }
</code></pre></div></div>

<p>ก็จะเป็นการ implementation runtime worker และ annotate ตัวคอมไพเลอร์</p>

<h2 id="ไฟล์สำคัญสำหรับการสร้าง-และจัดการ-database">ไฟล์สำคัญสำหรับการสร้าง และจัดการ Database</h2>

<h3 id="1-data-class-เพื่อเตรียมไว้ใช้ในการสร้าง-table">1. Data Class เพื่อเตรียมไว้ใช้ในการสร้าง Table</h3>

<h4 id="เตรียมสร้าง-data-class">เตรียมสร้าง Data Class</h4>

<p>เริ่มจากสร้างไฟล์ Kotlin (.kt) เปล่า ๆ มาตัวหนึ่ง แล้วเราก็มีตัวแปล หรือ Entity ต่าง ๆ อยู่ในสมอง เราสามารถตั้งชื่อไฟล์นี้ แทนชื่อตารางแบบง่าย ๆ ก็ได้ เช่นผมตั้งว่า <code class="highlighter-rouge">SleepNight.kt</code> เราทราบอยู่แล้วว่าในภาษา Kotlin นั้นชื่อไฟล์กับชื่อคลาส ไม่จำเป็นต้องตรงกันก็ได้ ไม่เหมือนใน Java แต่ว่า ตรงกันไว้ก็ดี จากนั้น เราก็เริ่มทำการ Implement dataclass โดยใส่ตัวแปล ที่เราต้องการให้มันเป็น column ใน Database ลงไป</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    data class SleepNight(
        var nightId: Long = 0L,
        val startTimeMilli:Long = System.currentTimeMillis(),
        var endtimeMilli: Long = startTimeMilli,
        var sleepQuality: Int = -1
    )
</code></pre></div></div>

<p>Initial ค่าไปเลยก็ดี จะเห็นว่า data class ใน Kotlin นั้น เราใส่ตัวแปลลงในส่วนของพารามิเตอร์รับค่าเลย data class ในความคิดของผม ผมมองว่าคล้าย ๆ เราสร้าง Stucture ในภาษา C หรือ อื่น ๆ</p>

<h4 id="บอกกับแอนดรอยด์ให้รู้ว่าส่วนนี้ของ-data-class-คือส่วนใดของ-table-ใน-database">บอกกับแอนดรอยด์ให้รู้ว่าส่วนนี้ของ Data Class คือส่วนใดของ Table ใน Database</h4>

<p>เราจะต้อง define บอกมันให้รู้ว่าส่วนตรงนี้คืออะไร เช่น Attribute นี้เป็น Primary Key หรืออะไรต่าง ๆ เป็นต้น</p>

<ul>
  <li>
    <p>data class ของเราเป็น entity set หรือ เป็นตารางนั้นเอง เราต้องบอกให้มันรู้ว่ามันเป็นตาราง โดยการเขียนไว้ข้างหน้าว่า</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @Entity(tableName = "daily_sleep_quality_table")
  data class SleepNight { .... }
</code></pre></div>    </div>
  </li>
  <li>
    <p>กำหนด Primary Key โดย เราจะบอกว่า ตัวนี้เป็น primary key หน้าตัวแปลของเรา แล้วเราจะใส่ Attribute ควบคุมต่าง ๆ ข้างในวงเล็บ เช่นในตัวอย่างนี้เป็น <code class="highlighter-rouge">autoGenerate = true</code></p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @PrimaryKey(autoGenerate = true)
  var nightId:Long = 0L,
</code></pre></div>    </div>
  </li>
  <li>
    <p>กำหนด ColumnInfo ให้กับตัวคอลัมม์อื่น ๆ ที่ไม่ใช่ Primary Key โดยใช้แทก <code class="highlighter-rouge">@ColumnInfo</code></p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    @ColumnInfo(name="start_time_milli")
    val startTimeMilli:Long = System.currentTimeMillis(),
</code></pre></div>    </div>

    <p>อย่างน้อยที่สุดก็คือ ใส่ชื่อให้มัน</p>
  </li>
</ul>

<p>จะสังเกตุว่าตัวแปลต่าง ๆ ที่เขียนใน Java, Kotlin เราจะเขียนเป็น Camel Case อยู่แล้ว แต่ถ้ามันไปอยู่ในมุมของ Physical หรือ ในมุมที่มันจะไปสร้างใน Database เรามักจะเขียนกลับไปเป็นแบบเดิม เช่นมี Underscore หรือ อะไรต่าง ๆ คล้าย ๆ กับภาษา C หรือ รักษา SQL เอาไว้ เพราะมันอาจจะ Implement ได้ง่านกว่า ในตรงนั้น</p>

<p>เมื่อถึงขั้นตอนนี้ โค้ดทั้งหมด ก็จะเป็นประมาณนี้</p>

<script src="https://gist.github.com/theethawat/f8b4840225756d51540495ab3d50cdb3.js?file=SleepNight.kt"></script>

<h3 id="2-สร้าง-data-access-object-dao">2. สร้าง Data Access Object (Dao)</h3>

<p>ตรงนี้คือการสร้างฟังก์ชั่น ขึ้นมา Reference คอมมานด์ หรือ ที่เราเรียกว่า Queries ต่าง ๆ ใน Relational Database นั่นเอง กล่าวคือ Data Access Object จะช่วยให้เราไม่ต้องเขียน Query ยาว ๆ เพียงแต่เรียกเป็นฟังก์ชันสั้น ๆ แค่นั้นเอง โดย Data Access Object จะสร้างอยู่ในรูปแบบของ Interface</p>

<p>ถ้าตามหลักของ OOP Interface คือ โครงสร้างของ Class อันนี้ก็เช่นเดียวกัน คือ มีความสามารถ มี Method อะไรบ้าง Return ค่ามั้ย ถ้า Return จะกลับมาเป็นอะไร รับค่ามั้ย เราจะให้พารามิเตอร์มันชื่ออะไร เป็นลักษณะแบบไหน Int, Float, Char หรือ เป็น User Define Type อย่างที่เราทำ Class, Data Class เราใส่ไปให้หมด โดยไม่ต้อง Implement Method (ที่ Kotlin เรียก fun ) ข้างใน</p>

<h4 id="interface-feature-listing">Interface Feature Listing</h4>

<p>ต้องการฟีเจอร์ หรือ Queries อะไรกับ Database บ้าง ลองลิสต์ลงมาก่อนเลย โดยชื่อไฟล์ยังเป็นไฟล์ .kt เหมือนเดิม แต่นิยมตั้งเป็น Dao ตามหลังเช่น <code class="highlighter-rouge">SleepDatabaseDao.kt</code> เป็นต้น</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    interface SleepDatabaseDao{
        fun insert(night:SleepNight)
        fun update(night:SleepNight)
        fun clear()
        fun get(key:Long):SleepNight?
        fun getTonight():SleepNight?
        fun getAllNight():LiveData&lt;List&lt;SleepNight&gt;&gt;
    }
</code></pre></div></div>

<h4 id="บอกให้มันรู้ว่าตรงนี้-เป็นส่วนใดของ-query-เป็นส่วนใดของ-database">บอกให้มันรู้ว่าตรงนี้ เป็นส่วนใดของ Query เป็นส่วนใดของ Database</h4>

<p>เหมือนอย่างในขั้นตอนที่แล้ว เราก็จะมี Annotate หน้า Class หรือ Function ตอนนี้ก็เช่นกัน</p>

<ul>
  <li>
    <p>กำหนดว่า interface นี้ เป็น Data Access Object (Dao) นะ เราก็ใส่ <code class="highlighter-rouge">@Dao</code> ไปข้างบน Interface</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @Dao
  interface SleepDatabaseDao ( ...)
</code></pre></div>    </div>
  </li>
  <li>
    <p>การใส่ Query ให้มัน ให้ถูกต้อง ใช่เนื่องจากมันเป็น Interface เราจะไปสั่งอะไรใน Function / Method มันหละ เราจะใช้วิธีนี้ในการบอกมันก่อนเลยว่า เออ เจอคนสั่งฟังก์ชันนี้มาทำยังไง มีด้วยกัน 2 แบบ คือ ใช้ Query สามัญ ๆ ที่มันมีไว้ให้แล้ว กับเขียน Query ขึ้นเอง เริ่มด้วยสามัญ ๆ</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @insert
  fun insert(night:SleepNight)
</code></pre></div>    </div>

    <p>ต่อไปมาดูคิวรี่ที่เราสามารถเขียนไปเองได้ โดยเราเองสามารถเอาตัวแปล ที่เราประกาศเป็นตัวรับค่าในฟังก์ชันนั้น มาใช้ได้ โดยใช้เครื่องหมาย : นำหน้าชื่อตัวแปล เช่น <code class="highlighter-rouge">:key</code></p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @Query("SELECT * FROM daily_sleep_quality_table WHERE nightId = :key ")
  fun get(key:Long):SleepNighit?
</code></pre></div>    </div>
  </li>
</ul>

<p>โดยสามารถใช้ SQL Command ต่าง ๆ ได้อยู่แล้ว ถึงตอนนี้ของผมจะได้โค้ดประมาณนี้ แล้วเดี๋ยวเราจะมาสร้าง Database ลงในมือถือของเรากัน</p>

<script src="https://gist.github.com/theethawat/f8b4840225756d51540495ab3d50cdb3.js?file=SleepDatabaseDao.kt"></script>

<h3 id="3-การเอา-database-ไปสร้างขึ้นอยู่บนอุปกรณ์แอนดรอยด์">3. การเอา Database ไปสร้างขึ้นอยู่บนอุปกรณ์แอนดรอยด์</h3>

<p>หลังจากเราวางโครงสร้างของ Database เรียบร้อยแล้ว แต่เรายังไม่สร้าง เราก็จะไปกำหนดคอนฟิก ให้มันสร้าง Database ขึ้นมา คือมันไม่จำเป็นที่จะต้องสร้าง Data base ใหม่ทุกครั้ง ไม่นั้นเครื่อง Client คงความจำเต็มตายเลย</p>

<h4 id="abstract-class-creation">Abstract Class Creation</h4>

<p>ต่อมาเราจะสร้าง Database โดยการสร้าง Abstract Class ซึ่ง Abstract Class ใน OOP คือ Class ที่ไม่สามารถสร้าง Object ได้โดยตรง แต่สามารถให้มีการถ่ายทอดไปยัง Class ลูกก่อน แล้ว Class ลูกก็จะ Implement Abstract Method จากนั้น ก็จัดการได้เลย ใน Abstract Class จะมีอย่างน้อย 1 Abstract Method ที่ว่าง ๆ เลย ให้ Class ลูก ไปจัดการ Implement เอาเอง และ Method อื่น ๆ เราสามารถเขียนต่าง ๆ ลงใน Method ได้เลย ว่าจะให้ Method นี้ทำงานอะไร ซึ่งตรงนี้เองที่ทำให้ Abstract Class แตกต่างจาก Interface</p>

<p>ดังนั้นเราจะมาเริ่มสร้าง Database ของเราโดยเริ่มจากสร้าง Class ที่ extend RoomDatabase</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    abstract class SleepDatabase:RoomDatabase(){
        ...
    }
</code></pre></div></div>

<h4 id="implement-database-class">Implement Database Class</h4>

<p>หลังจากนั้นก็จะมีขั้นตอนต่าง ๆ ใน การ Implement Database ของเราดังนี้</p>

<ul>
  <li>
    <p>บอกว่า Class นี้คือ Database แน่นอนว่าเราจำเป็นที่จะต้อง Annotate เหมือนทุก ๆ อันที่ผ่านมา โดยครั้งนี้เราต้อง <strong>บอก</strong> ด้วยว่าเราจะสร้างจาก Class อะไร (ซึ่งก็คือ Class นี้) มี Properties อะไรบ้าง โดยใช้ <code class="highlighter-rouge">@Database(entities = [...] , version = ... , exportSchema = ...</code> ดังนี้</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  @Database(entities = [SleepDatabase::class],version = 1 ,exportSchema = false)
  abstract class SleepDatabase:RoomDatabase(){

  }
</code></pre></div>    </div>
  </li>
  <li>
    <p>เอา Data Access Object หรือแหล่งรวม Query ในรูปแบบกำหนดเป็นชื่อฟังก์ชันของเรามาใส่ โดยเราต้องใส่ในรูปแบบของ Abstract Variable ก็ถ้า Abstract Class ไม่มีอะไรเป็น Abstract แล้วเราจะสร้างมันเป็น Abstract ทำไมหละ</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  abstract val sleepDatabaseDao:SleepDatabaseDao
</code></pre></div>    </div>
  </li>
  <li>
    <p>สร้าง Companion Object มาใช้ในการให้ไฟล์อื่น ๆ สามารถเจ้าถึง Database หรือ จะ Initial Database ได้ โดยที่ไม่ต้องไปสร้างเป็นตัวอย่าง หรือ เป็น Instance เอง คือผมพูดถูกมั้ย คือเราสร้าง Instance ไปเลย และให่เขาเรียกใช้ได่เลย ไม่ต้องมาสร้าง Instance เองอยู่</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  companion object{

  }
</code></pre></div>    </div>
  </li>
  <li>
    <p>สร้างตัวแปรตัวอย่างของเรา หรือ INSTANCE ของเราขึ้นมา อย่างที่บอกไว้คือ ตัวลูก ไม่ต้องสร้างเอง เราสร้างไว้ตรงนี้เลย โดยตัวแปลของ INSTANCE ของเราจะเป็นชนิด <code class="highlighter-rouge">SleepDatabase</code> ก็คือ เรากำลังสร้าง Database ที่มี Table SleepDatabase ที่เราเขียนโครงสร้างของตารางมาแล้วด้านบน</p>

    <p>โดยเราจะมีการกำหนดนิดนึงว่า ตัวแปลรัวนี้จะเป็นตัวแปรรูปแบบ <code class="highlighter-rouge">@Volatile</code> คือ เราจะไม่ขออยู่ใน Cache ขออยู่ใน Memory ไปเลย จะทำให้ ตัวแปร INSTANCE หรือ ตัวแปรแทนโครงสร้างตารางเนี่ย ไม่อยู่ใน Cache เราจะได้ไม่ต้องกลัวปัญหาว่า มันจะตรงกันหรือเปล่า ใน Cache กับ ใน RAM เรายอมอาจจะช้าลงนิดนึง แต่ชั่วร์</p>

    <p>โดยเราจะสร้างตัวแปรเป็น <code class="highlighter-rouge">Nullable</code> และ ตั้งค่าเริ่มต้นเป็น <code class="highlighter-rouge">null</code> และเป็นตัวแปรแบบเปลี่ยนค่าได้</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  private var INSTANCE : SleepDatabase? = null
</code></pre></div>    </div>

    <p>ที่เราตั้งเป็น Null ก็เพราะว่า โอเค ตอนนี้ INSTANCE เทียบได้กับDatabase ที่เราจะสร้างแล้ว แต่ว่า เราจะยังไม่สร้าง เราจะตรวจสอบก่อนว่าตอนนี้ มันมีอยู่แล้ว หรือ ไม่ อย่าลืมว่า เราอาจจะไม่ได้ build หรือ Install / Run App นี้ครั้งเดียว ในระหว่าง การพัฒนา ดังนั้น เราจะเช็คก่อนว่า Database มีอยู่แล้วหรือไม่ ถ้ามีก็ไม่ต้องสร้าง ถ้าไม่มี ก็สร้าง จะได้ไม่ซับซ้อนด้วย</p>
  </li>
  <li>
    <p>Synchronyze Program แล้วดูว่า instance ของเรามีอยู่หรือไม่ เราจะใช้การ Smart Cast สร้างตัวแปลใน loop ไม่สิ ใน Function นี้อีกตัว เป็นการ Copy มาจะได้ไม่มีปัญหาค่าซ้ำซ้อนของตัวแปร แล้วค่อยส่งค่ากลับไป</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  synchronized(this){
      var instance = INSTANCE

      ...

      return instance
  }
</code></pre></div>    </div>
  </li>
  <li>
    <p>เช็คว่า Database ถูกสร้างแล้วหรือยัง ข้างต้นนี้ คือ Database ถูกสร้างแล้ว Return มันกลับไปเลย แต่ถ้า instance เป็น null เราจะสร้าง Database มันขึ้นมา โดยสิ่งต่อไปนี้ยังอยู่ใน Scope ของ <code class="highlighter-rouge">synchronized(this){ }</code> นะ ก่อน <code class="highlighter-rouge">return</code> ด้วย</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  if(instance == null){
      instance = Room.databaseBuilder(
          context.applicationContext,
          SleepDatabase::class.java,
          "sleep_history_database"
      ).fallbackToDestructiveMigration().build()
  }
</code></pre></div>    </div>

    <p>ดูจากโค้ดเราก็จะพบว่า เราจะสร้าง instance ให้เป็นค่าใดค่าหนึ่ง นั่นก็คือ เป็น Room และเรียกใช้ DatabaseBuilder โดยยึดจาก Class SleepDatabase ก็คือ Class นี้ และใช้ชื่อ <code class="highlighter-rouge">sleep_history_database</code> จากนั้นจึงสั่ง <code class="highlighter-rouge">fallbackToDestructiveMigration()</code> และ <code class="highlighter-rouge">build()</code> ก่อนจะ Return ออกไป เป็น Instance</p>
  </li>
</ul>

<p>จากขั้นตอนทั้งหมด ของส่วนที่ 3 นี้ จะมี Source Code ทั้งหมดเป็นดังนี้</p>

<script src="https://gist.github.com/theethawat/f8b4840225756d51540495ab3d50cdb3.js?file=SleepDatabase.kt"></script>

<p>ทั้งหมดนี้ ก็คือการสร้าง Database เริ่มต้นในโปรแกรมของเรา โดยสร้างผ่าน Room Database บน Android ตรงนี้ยังไม่พูดถึงการใช้ UI จากฝั่งผู้ใช้มา Connect หรือ Interact กับโปรแกรมของเรา ซึ่งตรงนี้เราก็อาจจะไปดีไซด์ Layout แล้ว ใช้รูปแบบต่าง ๆ ในการ Map View ของเรา เข้ากับ Model ของเราตรงนี้ ได้ ไม่ว่าจะเป็น Model View Controller (MVC), Model View Presenter (MVP) หรือ Model View ViewModel (MVVM) ก็ได้</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html"><![CDATA[การจัดเก็บข้อมูลเป็นสิ่งสำคัญสำหรับทุก ๆ การพัฒนาแอพพลิเคชั่น สำหรับแอนดรอยด์ มันมี By Default อยู่แล้วคือ SQLite Database ซึ่งเป็นฐานข้อมูลแบบ Relational Database วันนี้ผมจะเอาประสบการณ์ที่ผมไปทำใน Code Lab มาอธิบายการทำงานคร่าว ๆ ของ Room Persistance Library หรือ Room Database กัน]]></summary></entry><entry><title type="html">Android with Databinding in Kotlin (Note)</title><link href="http://localhost:4000/it-blog/2019/10/11/AndroidKotlinwithDatabinding.html" rel="alternate" type="text/html" title="Android with Databinding in Kotlin (Note)" /><published>2019-10-11T00:00:00+07:00</published><updated>2019-10-11T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/11/AndroidKotlinwithDatabinding</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/11/AndroidKotlinwithDatabinding.html"><![CDATA[<p>Kotlin the new 1st class language in Android. And today the trend name databinding is so amazing more than using findViewById right? it handle Smoother.</p>

<p>While I study in this for my project, I has taked a note in Markdown and I will show you about my note but I recommend you to go to Android Codelab <a href="https://codelabs.developers.google.com/android-kotlin-fundamentals/">Kotlin Fundamental Course</a> to learn it. This is only my note taking use sometimes it can help you if you cannot remember all like me</p>

<h1 id="android-with-kotlin-databinding">Android with Kotlin Databinding</h1>

<h2 id="pre-request">Pre-Request</h2>

<p>Active Android-X in your Android Studio</p>

<h3 id="activatate-databinding">Activatate Databinding</h3>

<p>Enable Databinding in <code class="highlighter-rouge">build.gradle</code> file that app part inside <code class="highlighter-rouge">android{}</code> tag</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dataBinding {
    enabled = true
}
</code></pre></div></div>

<p>After That Sync your app</p>

<h2 id="basic-viewbinding">Basic Viewbinding</h2>

<h3 id="layout-compatible">Layout Compatible</h3>

<p>if you using linear layout add layout <code class="highlighter-rouge">&lt;layout&gt; .... linear layout ..... &lt;/layout&gt;</code> over there
and move layout name space like <code class="highlighter-rouge">xmlns:android="......"</code> to this layout and <b>Build your App</b></p>

<h3 id="programing">Programing</h3>

<p>go to <code class="highlighter-rouge">MainActivity.kt</code> or other program file</p>

<ul>
  <li>Active Binding Variable using <code class="highlighter-rouge">lateinit</code> that is predefine without value initial like
private lateinit var binding: ActivityMainBinding</li>
  <li>Set Content View Using Data Binding everything using the attribute of variable that have define in the previous step
binding = DataBindingUtil.setContentView(this,R.layout.activity_main)</li>
</ul>

<p><code class="highlighter-rouge">this</code> tell you that ‘this activity’ and R.layout.activity_main show that layout that you want to bind or showing</p>

<p>Databinding will generate A Specific Variable Name of Attribute like <code class="highlighter-rouge">nickname_show</code> to <code class="highlighter-rouge">nicknameShow</code> using Camel Case that
automatically making by an IDE</p>

<h3 id="activity-recieving">Activity Recieving</h3>

<ul>
  <li>
    <p>Using Binding Variable in this code using bind in syntax using dot method like</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  binding.doneButton.setOnClickListener {
      addNickname(it)
  }
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="highlighter-rouge">it</code> in Kotlin like <code class="highlighter-rouge">this</code> in Java to call compiler that I want to make function on this class</p>

<h3 id="managing-activity">Managing Activity</h3>

<ul>
  <li>Using Binding Variable and dot syntax like
binding.nicknameShow.text = binding.nicknameInput.text</li>
  <li>Using <code class="highlighter-rouge">binding.apply{...}</code> to easy managing code (binding is Binding Variable)</li>
  <li>Using <code class="highlighter-rouge">invalidateAll()</code> to invaluate data (Get new data) when Refresh UI</li>
  <li>
    <p>Example on this program</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   binding.apply {
      binding.nicknameShow.text = binding.nicknameInput.text
      invalidateAll() /_ to invaluate data (Get new data) when Refresh UI _/
      binding.nicknameInput.visibility = View.GONE
      binding.doneButton.visibility = View.GONE
      binding.nicknameShow.visibility = View.VISIBLE
  }
</code></pre></div>    </div>

    <p>Using Attribute As same as using findViewById</p>
  </li>
</ul>

<h2 id="recommended-data-binding">Recommended Data-Binding</h2>

<ul>
  <li>Using Data Class (in Another Kotlin File) for keep the object type variable like the stuct in C or can use any class instead of data class</li>
  <li>
    <p>Link The Layout to that class</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  &lt;data&gt;
      &lt;variable name="myName" type="com.example.aboutme.MyName"/&gt;
  &lt;/data&gt;
</code></pre></div>    </div>
  </li>
</ul>

<p>The name of the variable you can define but link to your data class or Any structure class.</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html"><![CDATA[Kotlin the new 1st class language in Android. And today the trend name databinding is so amazing more than using findViewById right? it handle Smoother.]]></summary></entry><entry><title type="html">ทำไมเราต้องสเกลแอพ และเตรียมพร้อมแอพสำหรับสเกล ? (Internet Programing 2019)</title><link href="http://localhost:4000/it-blog/2019/10/03/whytoscaleweb.html" rel="alternate" type="text/html" title="ทำไมเราต้องสเกลแอพ และเตรียมพร้อมแอพสำหรับสเกล ? (Internet Programing 2019)" /><published>2019-10-03T00:00:00+07:00</published><updated>2019-10-03T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/03/whytoscaleweb</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/03/whytoscaleweb.html"><![CDATA[<p>บทความนี้เป็นการสรุปเนื้อหาจากที่เรียนนะครับ ปนความคิดเห็นผู้เขียนไปด้วย อาจจะมึน ๆ บ้าง
การสเกลคืออะไร เตรียมการสเกลไว้ดีมั้ย ทำไมต้องทำด้วย ไม่ทำได้มั้ย</p>

<p>คำตอบทั้งหมดคงจะตอบว่า ได้ครับ แน่นอนว่าทุกอย่างถ้าเราอยู่ในทรัพยากรที่จำกัดมาก ๆ บางทีการวางโครงสร้างของเราอาจจะไม่ต้องทำให้มันรองรับการ Scale Up ก็ได้ แต่ถ้าเราสามารถที่จะเขียนได้หละ สามารถเขียนเปิดทางแอพพลิเคชั่นให้มันเปิดทางการสเกล หรือ การขยายได้หละ มันจะดีกว่ามั้ย</p>

<h2 id="ทำไมเราต้องเปิดทางให้-application-สามารถ-scale-ต่อไปได้">ทำไมเราต้องเปิดทางให้ Application สามารถ Scale ต่อไปได้</h2>

<p>การเวลาเปลี่ยน ทุก ๆ อย่างที่อาจจะคิดว่าดีที่สุดในช่วงเวลานั้นอาจจะไม่ได้ดีที่สุดเสมอไป แล้วถ้าเราคุมได้หละ ว่าผู้ใช้เราเท่านี้ ยังไงยังไง ก็เท่านี้ เรายังต้องสเกลอีกมั้ย ก็ต้องบอกว่าตราบใดที่มันมีการใช้งานมันจะมีอะไรบางอย่างที่เพิ่มขึ้น อยู่เสมอ ๆ เช่น เราทำแอพพลิเคชั่นสำหรับแม่ค้า 5 เคาท์เตอร์ เป็นระบบ POS ยังไง เราก็จะไม่เพิ่มเคาท์เตอร์ แต่ Data หละ Log ข้อมูลหละ มันเพิ่มขึ้นทุก ๆ วันที่ลูกค้ามาใช้งาน ความต้องการในการใช้บริการ Storage ก็จะเยอะมากขึ้น จริงมั้ย เพื่อให้ง่ายขึ้นเราจะมาวิเคราะห์ปัจจัยต่าง ๆ ที่มันจะบอกว่าทำไมเราควรเตรียมการให้แอพพลิเคชั่นของเราสเกลได้</p>

<hr />

<h2 id="1-ปัจจัยภายนอกที่มีผลต่อการ-scale">1. ปัจจัยภายนอกที่มีผลต่อการ Scale</h2>

<h3 id="ปัจจัยโดยตรงของการ-scaling">ปัจจัยโดยตรงของการ Scaling</h3>

<ol>
  <li>
    <p>อย่างที่กล่าวไว้แล้วว่า ระบบต่อให้เราจะมีคนใช้จำนวนจำกัดแล้ว แต่เวลาหนึ่ง ถ้าระบบถูกใช้ไปเรื่อย ๆ Process จะถูก Fork ออกมาขึ้นเรื่อย ๆ Data, Event ต่าง ๆ จะถูกปล่อยออกมาเรื่อย ๆ วันหนึ่งเราจะทำยังไง เมื่อ Storage ของเราเต็มเกินที่จะรับข้อมูลเหล่านี้ การเพิ่มพื้นที่ Storage ก็ถือเป็นการเพิ่ม Vertical Scaling อย่างหนึ่งแล้ว</p>
  </li>
  <li>
    <p>แม้จะมอง หรือ ไม่มองถึงการเพิ่มขึ้นของผู้ใช้ แต่การที่โปรแกรมหนึ่งตัว อาจจะต้องมีการทำงานร่วมกันกับโปรแกรมอีก 1 ตัว มันก็ย่อมทำให้ระบบต้อง Concurrence มากขึ้น เช่น แต่ก่อนห้างสรรพสินค้าอาจจะมีการรับชำระเงินสดเพียงอย่างเดียว ต่อมารับบัตรเครดิต รับเดบิต หรือ รับ Prompt Pay มันทำให้การเพิ่มงานของระบบมันเพิ่มขึ้น แน่นอนว่าถ้าเรามีทรัพยากรต่าง ๆ เท่าเดิม สิ่งเหล่านี้ ย่อมรับภาระงานที่หนักขึ้น</p>
  </li>
</ol>

<h3 id="ปัจจัยโดยอ้อม-ที่ทำให้เราควรจะ-scaling">ปัจจัยโดยอ้อม ที่ทำให้เราควรจะ Scaling</h3>

<ol>
  <li>
    <p>บางทีการทำงานด้วยระบบของเราในเวลาหนึ่ง ความเร็วขนาดนี้จะเป็นเรื่องที่ปกติ ยอมรับได้ แต่เมื่อโลกมันผ่านไป การทำงานด้วย Speed แค่นี้อาจจะช้าเกินไปสำหรับระบบของเรา</p>
  </li>
  <li>
    <p>เมื่อสักครู่ เรายังไม่มองถึงการเพิ่มขึ้นของผู้ใช้ แล้วถ้ามีการเพิ่มขึ้นของผู้ใช้หละ แน่นอนว่า Service ที่เราวางเอาไว้ อาจจะไม่เพียงพอต่อการเพิ่มขึ้นของผู้ใช้ระดับหนึ่ง และอาจจะเกิดการทำงานที่มากเกินไป และเกิดการ Overloading ได้</p>
  </li>
  <li>
    <p>บางทีการทำงาน Memory เอย Data เอย มันไม่มีพื้นที่พอแล้ว แล้วมันจำเป็นจริง ๆ ที่อาจจะต้องไปรบกวน Service ตัวอื่น ๆ แล้วประสิทธิภาพของ Service ตัวอื่น ๆ ก็จะน้อยลง หรือ พังไปเลยก็ได้</p>
  </li>
  <li>
    <p>บางทีเราอยากจะเพิ่ม Processing Power แต่เออ Hardware ผม มันไม่รองรับแล้วหละครับ</p>
  </li>
</ol>

<p>โอเค เราได้กล่าวถึงปัจจัยที่เราไม่ได้ต้องการจะให้มันเกิด หรือ ไม่รู้ด้วยซ้ำว่ามันจะเกิดขึ้น ทีนี้เราจะมาพูดถึงปัจจัยภายใน หรือ คือเรารู้ตั้งแต่แรกแล้วว่าเราต้องการสิ่งนี้ เราต้องการให้มันตอนสนองสิ่งเหล่านี้ แน่นอนว่ามันอาจจะมี Extra Work บ้าง แต่มันก็ทำประโยชน์ให้เรา เราเลยเตรียมการสเกลเอาไว้</p>

<hr />

<h2 id="2-ปัจจัยภายในที่มีผลต่อการ-scale">2. ปัจจัยภายในที่มีผลต่อการ Scale</h2>

<h3 id="21-ความต้องการความพร้อมใช้งานสูงสุด-high-availability">2.1 ความต้องการความพร้อมใช้งานสูงสุด (High Availability)</h3>

<p>คือ Service หรือ Application ของเรานั้นเราต้องการให้มันสามารถทำงานได้ ตอบสนอง Request ของผู้ใช้ได้ตลอดเวลา หรือ สูงสุดตามที่เราสามารถทำได้ หรือเราอาจจะมีสัญญา Service Level Agreement (SLA) กับลูกค้าของเราไว้ โดยส่วนใหญ่ในเรื่องของความพร้อมใช้งาน เราจะวัดกันเป็นจำนวนของตัวเลข 9 เช่น Uptime 99% เราจะเรียก Two nines หรือ Uptime 99.999% เราจะเรียน Five nines ระบบไหนถึง Five nines ถือว่าที่สุดแล้วว</p>

<p>โดยคำจำกัดความของ High Availability หรือ HA นั้น หมายถึง ระบบสามารถทำได้ตลอด ตามข้อตกลงที่วางไว้ โดยไม่ได้บอกว่าระบบจำเป็นต้องตอบสนองทุกอย่างถูกต้องนะ ถ้าพบว่ามี Request ระบบหาเส้นทางไม่เจอ ตอบสนองไม่ได้ แล้วตอบกลับไปว่า 502 Bad Gateway หรือ 503 Gateway Timeout แค่นี้ก็ถือว่าบรรลุวัตถุประสงค์ของ HA แล้ว</p>

<h4 id="แล้วจะทำยังไงให้ได้-ha">แล้วจะทำยังไงให้ได้ HA</h4>

<p>การที่จะให้ระบบบรรลุวัตถุประสงค์ของการพร้อมทำงานนั้น สิ่งที่เราควรทำคือ เราต้องเตรียมให้พร้อม เช่นถ้ามีโหนด หรือ Server ตัวหนึ่งล่มไป ระบบก็สามารถใช้อีกตัวหนึ่งแทนได้ การวางรูปแบบ Master-Slave ถือเป็นวิธีหนึ่งที่นิยมกันทำเพื่อบรรลุเป้าหมายของ HA คือมีการเตรียม Server หนึ่งเอาไว้สำหรับการทำงานหลัก และมี Server สักตัวสองตัวเป็น Slave มีการทำ Replication อยู่ เมื่อมีการล่มของ Master ไอตัว Slave ก็สามารถเลือกกัน หรือ โหวตกันขึ้นมาเป็น Master แทนได้ เป็นต้น</p>

<h4 id="การทำ-master-slave-มี-2-แบบในการซิงค์ข้อมูลกัน">การทำ Master-Slave มี 2 แบบในการซิงค์ข้อมูลกัน</h4>

<p>จะว่าไปแล้ว วิธีการทำ Master-Slave ก็มีการซิงค์ข้อมูลกันสองวิธีด้วยกัน</p>

<ul>
  <li>การมี Monitoring Node คือ มีโหนดตัวหนึ่ง เสมือนมาจาก Client จะชี้ไปที่ตัว Master อยู่เสมอ ถ้ามันไม่สามารถติดต่อเชื่อมไปยัง Master Node ได้ มันก็จะไปที่ Slave ทันที แน่นอนข้อเสียของวิธีนี้คือ Node ตัวนี้จะเป็น Single Point of Failure คือ ถ้า Node ตัวนี้พังขึ้นมาระบบของเราจะพังทันที
<img src="/assets/internetprograming/monitor-node.png" alt="Monitor Node Master Slave" /></li>
  <li>การไม่มี Monitoring Node แต่ใช้ Heartbeat ในการสื่อสารข้อมูลกัน โอเคว่ามันมีทั้งตัว Master และ ตัว Slave แต่ทุกตัวจะเหมือนเป็น Peer to Peer แล้วคุยกันบอกว่าฉันยังอยู่นะ เทคนิคนี้ใช้ใน MongoDB Replica ครับ แน่นอนว่ามันจะไม่ใช่ Single Point of Failure แต่ว่าถ้าสัญญาณ Heartbeat เกิดความผิดพลาดขึ้นมา โดย Node ไม่ได้เสียหละ จะเกิดอะไรขึ้น จะมีการสร้าง Master ขึ้นมามากกว่า 1 ตัวไหม อันนี้อาจจะเป็นปัญหาได้
<img src="https://docs.mongodb.com/manual/_images/replica-set-primary-with-two-secondaries.bakedsvg.svg" alt="Heartbeat in MongoDB Replica" />
<a href="https://docs.mongodb.com/manual/core/replica-set-architecture-three-members/">Heartbeat in MongoDB Replica</a> เอารูปมาจาก Doc ของ MongoDB นะครับ</li>
</ul>

<h2 id="22-ความต้องการให้ระบบมีความทนทานต่อการล้มเหลว-fault-tolerance">2.2 ความต้องการให้ระบบมีความทนทานต่อการล้มเหลว (Fault Tolerance)</h2>

<p>FT หรือ Fault Tolerance คือการทำให้ระบบของเรานั้นล้มเหลวให้น้อยที่สุด ส่วนนี้ล่ม ส่วนอื่นที่ไม่ล่มก็ควรจะต้องใช้งานได้ และจะต้องมีการแก้ไขปัญหาได้เองให้ได้ดีและเร็วที่สุด เท่าที่เราจะทำได้ (เขียน Catch Error เอาไว้เลย) มันจะไม่ใช่แค่การตอบว่า 502 Bad Gateway แล้ว แต่จะต้องเป็นการแก้ปัญหาและ Return สิ่งที่ผู้ใช้ต้องการ หรือ</p>

<p>ถ้าเรามีเว็บเซิฟเวอร์ แล้ว เว็บไซต์รีเควสจากผู้ใช้ A ล่ม ผู้ใช้ B จะรีเควสมา ก็ควรจะยัง Request ได้ ยิ่งถ้าสมมติรีเควสที่มาจาก A กับ B อยู่ใน Internal Port ต่างกัน เช่น A กับ B อาจจะเข้ามาที่พอร์ต 80 (HTTP) ทั้งคู่ รีเควสมายัง Sub URL หนึ่ง ซึ่งเรา Reverse Proxy ไปที่ Port 3000 กับ B เข้ามายัง Sub URL ที่เรา Reverse Proxy ไปที่ Port 4000 แม้ Request ของ A จะมีปัญหา Request ของ B ก็ยิ่งไม่ควรจะมีปัญหา</p>

<p>การแก้ปัญหา Fault Tolerance นั้นเป็นการเพิ่มระบบของเราให้มีความ High Availability ขึ้นส่วนหนึ่งเหมือนกัน</p>

<h3 id="การทำ-redundancy-เพื่อแก้ปัญหา-fault-tolerance-โดยตรง">การทำ Redundancy เพื่อแก้ปัญหา Fault Tolerance โดยตรง</h3>

<p>เพื่อการให้ระบบของเราล้มเหลวได้น้อยที่สุดนั้น การมีอีกระบบ ๆ หนึ่งที่ Replication จาก Primary Node ไปและทำงานคู่ขนานกันไป ถ้ามีระบบใดระบบหนึ่งพังลงไป ก็สามารถใช้อีกระบบหนึ่งทดแทนได้ทันที มีการนำมาใช้ในระบบที่ต้องการความทนต่อความล้มเหลว อย่างโครงการของสถานีอวกาศ ของรถยนต์ต่าง ๆ ก็มี Node ที่ทำงานพร้อม ๆ กันแบบนี้เช่นกัน อาจจะมีการเพิ่ม Voting System เข้ามาให้พวก Secondary Node โหวตกัน ถ้าหาก Primary ล่มไป ว่าใครที่จะมาทำงานเป็น Primary ต่อไป</p>

<p>จะเห็นได้ว่า MongoDB Replica ก็มีระบบที่มีความสามารถในการทำ Fault Tolerance เหมือนกัน เพราะ มีการทำ Replication อยู่ตลอดเวลา และมี Vote System ที่ใช้ในการเลือกตัวใหม่ ขึ้นมาแทนกรณี Primary Node ได้พังลงไป</p>

<h3 id="forward-error-correction">Forward Error Correction</h3>

<p>คือ การเพิ่มพลังความสามารถของตัวฝั่ง Reciever ให้รับรู้ได้ทันทีว่าขณะนี้เกิด Error ขึ้นนะ และให้ฝั่งผู้รับแก้ของมันเอง เพราะบางอย่าง ต้องแก้ที่ผู้รับเท่านั้น เราอาจจะไม่สามารถแก้ไปจากผู้ส่งได้ ผู้ที่ใช้ก็เช่น พวกเทคโนโลยีเกี่ยวกับโทรศัพท์ เช่น CDMA, GSM เป็นต้น</p>

<h3 id="การทำ-checkpointing">การทำ Checkpointing</h3>

<p>ก็คือมีจุดเช็คพอยต์อยู่เรื่อย ๆ ถ้าหากระบบพังตรงนี้ก็กลับไปทำที่จุดเดิมที่มันเคย Checkpoint เอาไว้ เรียกว่าการอนุญาติให้มันทำการกู้คืนความล้มเหลวจากจุดที่มันทำสำเร็จครั้งล่าสุดไป มีการ Save ข้อมูลที่จำเป็นจากการ Running ของแอพพลิเคชั่นไว้ที่จุด Checkpoint และยังสามารถรีสตาร์ทจุด Checkpoint นี้ ที่เครื่องเดิม หรือ เครื่องอื่น ๆ ก็ได้</p>

<h3 id="การทำ-distributed-checkpointing">การทำ Distributed Checkpointing</h3>

<p>เป็นหนึ่งการต่อยอดการทำจาก Checkpointing เนื่องจากระบบต่าง ๆ ที่เราเขียนขึ้นมานั้น มันไม่ได้อยู่บนเวลาตัวเดียวกันทั้งหมด อาจจะอยู่คนละสัญญาณนาฬิกา ดังนั้นการทำ Checkpoint บนระบบแบบกระจาย หรือ Distributed System จึงมีความยุ่งยากกว่าตรงที่เราต้องมีการเซ็ทจุด Concurrent Checkpoint ที่เป็นจุดที่ทุก ๆ Stream หรือ ทุก ๆ งานของเรามีสเตทเดียวกัน</p>

<p>สมมติผมมีรถยนต์ เครื่องบิน มอเตอร์ไซค์ จักรยาน และ คนเดินธรรมดา จุด Checkpoint แรกที่อาจจะมีร่วมกันได้ก็คือ จุด Start ทีนี้ผมก็จะต้องกำหนดจุด Checkpoint ที่สองที่ทุก ๆ อย่างมาเป็นสเตทเดียวกัน เช่นตอนแรกผมบอกว่าอยู่ที่สนามบินสุวรรณภูมิ จุด Checkpoint ต่อไป ก็อาจจะเป็นสนามบินเชียงใหม่ ถ้าผมเก็บ Checkpoint ที่ปั้มน้ำมัน เครื่องบินอาจจะมาไม่ได้</p>

<p>สมมติเรามีรถอย่างเดียว และเราตั้ง Checkpoint ไว้ที่ปั้มน้ำมัน ถ้ารถเสีย ให้กลับมายังปั้มน้ำมันล่าสุดที่มันเคยมา แต่นี่ถ้ารถเสีย รถต้องกลับมาที่สนามบินครั้งล่าสุดที่เคยเจอกัน และทุก ๆ อย่างด้วย พอกลับมาเรื่องของระบบของเราการจัดการ Distributed Checkpointing มันก็จะยากกว่า Checkpointing ปกติประมาณนี้แหละ</p>

<hr />

<p>เอกสารอ้างอิง
Fernando Doglio. Scaling Your Node.js Apps. Appress,2018 - <a href="https://books.google.co.th/books/about/Scaling_Your_Node_js_Apps.html?id=noF8DwAAQBAJ&amp;source=kp_cover&amp;redir_esc=y">Scaling Your Node.js App in Google Books</a></p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html"><![CDATA[บทความนี้เป็นการสรุปเนื้อหาจากที่เรียนนะครับ ปนความคิดเห็นผู้เขียนไปด้วย อาจจะมึน ๆ บ้าง การสเกลคืออะไร เตรียมการสเกลไว้ดีมั้ย ทำไมต้องทำด้วย ไม่ทำได้มั้ย]]></summary></entry><entry><title type="html">วิเคราะห์ High Availability และ Fault Tolerance บนกรณีศึกษา MongoDB Replica</title><link href="http://localhost:4000/it-blog/2019/10/03/mongoreplica.html" rel="alternate" type="text/html" title="วิเคราะห์ High Availability และ Fault Tolerance บนกรณีศึกษา MongoDB Replica" /><published>2019-10-03T00:00:00+07:00</published><updated>2019-10-03T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/10/03/mongoreplica</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/10/03/mongoreplica.html"><![CDATA[<p>ยังไม่เสร็จนะ หลังจากที่เราพูดถึง HA หรือ High Availability และ FT หรือ Fault Tolerance กันแล้ว เราจะมาทดลองสร้างระบบดูกันว่า เออการทำงานมันเป็นอย่างไร กับระบบที่มันบอกว่าตัวเองเป็น High Availability และ Fault Tolerance ว่าตรงไหนคือ HA ตรงไหนคือ FT</p>

<h2 id="mongodb-replica">MongoDB Replica</h2>

<p>MongoDB Replica เป็นการทำ Replication ของฐานข้อมูลแบบ NoSQL อันหนึ่งก็คือ MongoDB โดยเราจะต้องเตรียมโหนดสำหรับ MongoDB ไว้ เป็นจำนวนเลขคี่ หรือ เริ่มต้นก็คือ 3 Node , 5 Node เป็นต้น เราสามารถจำลองสร้างขึ้นมาทั้งอยู่บนเซิร์ฟเวอร์เดียวกัน คนละพอร์ต อยู่คนละเซิร์ฟเวอร์กัน หรือ อย่างไรก็ได้ โดยหลักการทำงานของ MongoDB Replica นั้น Client คือผู้เขียนหรือผู้อ่านข้อมูล ในที่นี้ก็รวมถึงแอดมินที่เขียนข้อมูลลงในดาตาเบสด้วย จะ Read and Write ไปที่ Primary Node ก่อนที่ระบบมันจะทำ Replication ไปยัง Secondary Node ทั้งสอง หรือ 4 โหนด และมีการทำ Heartbeat คุยกัน</p>

<p><img src="https://docs.mongodb.com/manual/_images/replica-set-read-write-operations-primary.bakedsvg.svg" alt="Mongo DB Replica Working Model" />
รูปจาก Official Documents ของ MongoDB</p>

<!-- ### ทำไมจำนวนโหนดต้องเป็นเลขคี่ด้วยหละ

นี่คือสิ่งที่อธิบายต่อไป เนื่องจากโอเค เพื่อทำการให้ระบบของเราทนต่อความขัดข้อง หรือ จัดการเพื่อตอบสนอง Fault Tolerance โหนดที่เป็น Secondary จะมีการทำ Replication อยู่ตลอดจาก Primary อยู่แล้ว และทันทีที่ Primary Node เกิดการล่มสลายไป Secondary Node พวกนี้จะต้องทำการ Vote เพื่อเลือกว่าตัวไหน จะเป็น Primary ตัวต่อไป โดยการที่จะโหวตกันได้เนี่ยจำนวนโหนดที่เหลืออยู่ จะต้องเกินกึ่งหนึ่ง (ครึ่งหนึ่ง) ของสมาชิกทั้งหมดที่เราประกาศไว้ เช่น เราเล่น 3 Nodes มีโหนดหนึ่งตายไป เหลือ 2 Node ที่ Avaliable อยู่ ซึ่งมากกว่าครึ่งของ 3 Nodes จึงโหวตกันได้

กรณีถ้าเรามี 4 Nodes   -->

<h3 id="ลองเล่น-mongodb-replica-กัน-บน-docker">ลองเล่น MongoDB Replica กัน บน Docker</h3>

<p>เนื่องจากมีทรัพยากรไม่มาก ผมจะเล่น 3 Module Replica set แล้วกันนะครับ ผมขี้เกียจจะเปิด Linux มาแล้ว ผมจะเข้าไปสร้างบน Server ผม ซึ่งเป็น Linux อยู่แล้ว โดยสร้าง Docker Compose ไว้ สร้าง 3 Node ผมจะสร้าง Directory ขึ้นมา แล้วใน Directory นั้น จะสร้างไฟล์ <code class="highlighter-rouge">docker-compose.yml</code> ขึ้น</p>

<p><img src="/assets/internetprograming/mongo1.jpg" alt="Docker Compose.yml File" /></p>

<p>ในรูปผิดอยู่ เอาตาม โค้ดใน Gist ของ Github ข้างล่างนะ</p>

<p>ในที่นี้ผมสร้างใน IP เดียวกันก่อน ยังไม่ได้ตั้ง Private Network แต่เอามันมาลงที่คนละพอร์ต คือ Forward Default Port ของ MongoDB คือ 27017 มาที่พอร์ต 4041,4042 และ 4043 โดยที่ผมเองจะให้ Volumn กับมันไป พอร์ตละ Folder ละกัน โดย By default ของ MongoDB บน Docker Ubuntu Bionic จะอยู่ที่ <code class="highlighter-rouge">/var/lib/mongodb</code> ซึ่งรู้สึกว่ามันก็ต่างกันอยู่นะ กับการลง MongoDB Native บนเครื่อง Ubuntu หรือ Directory เดียวกัน อันนี้ไม่มั่นใจ แล้วเราจะสร้าง Config File เอาตามชื่อของมันแล้วกัน ก็คือ <code class="highlighter-rouge">mongod.conf</code> ซึ่งผมจะให้มันไปอยู่ที่ <code class="highlighter-rouge">/etc/mongod.conf</code> ซึ่งอันนี้รู้สึกว่าเหมือนกันทั้งค่า Default ของเครื่อง Linux และ Linux บน Docker</p>

<script src="https://gist.github.com/theethawat/45b5c5eb98dece35a77623df23bbf836.js?file=docker-compose.yml"></script>

<h3 id="สร้างไฟล์-และ-โฟลเดอร์-ก่อนที่จะให้-docker-access">สร้างไฟล์ และ โฟลเดอร์ ก่อนที่จะให้ Docker Access</h3>

<p>แน่นอนครับ แม้ว่าเราจะมีไฟล์คอนฟิกแล้ว แต่เราบอกให้ Pass Volumn และ Pass File ไป แต่เรายังไม่ได้สร้างไฟล์ที่จะให้ Pass ไปเลย ไฟล์ที่เราจะไปกำหนดการ Replication จะอยู่ใน <code class="highlighter-rouge">mongod.conf</code> ครับ ถ้าใครลง MongoDB ใน Linux ตัวเองลองเปิด ไม่ว่าจะ GUI,CLI ดูก็ได้ครับ ซึ่งตอนนี้ผมไม่ได้ลง ผมเลยไป Search ดูใน Google ไฟล์ก็จะเป็นตามนี้ครับ <a href="https://github.com/mongodb/mongo/blob/master/rpm/mongod.conf">MongoDB conf.d Original from GitHub </a>
่
<img src="/assets/internetprograming/mongo2.jpg" alt="Folder Making" /></p>

<p>จากเดิมที่ไม่มีอะไร เราสร้าง Directory ขึ้นมา 3 Directory ก่อนที่จะสร้างไฟล์ conf.d แล้ว copy โครงพื้นฐานของมัน จากลิงค์ที่ให้ไปข้างบนนี้มาใส่ได้เลยย เราจะได้ไฟล์ของเรามา อย่างนี้เลย</p>

<p><img src="/assets/internetprograming/mongo3.jpg" alt="File Making" /></p>

<p>ทีนี้ เราจะโฟกัสที่ สองตัวคือ storage ซึ่งเป็นสีขาว ๆ เลยกับ replication ซึ่งมัน comment อยู่ ดังรูปด้านบน อย่างแรกเลย คือใน docker-compose.yml เราส่ง Storage ไปที่ <code class="highlighter-rouge">/var/lib/mongodb</code> ใช่มั้ยหละ แต่ตรงนี้เป็น mongo โอเค แก้ให้มันเหมือนกันครับ จะแก้ที่ docker-compose file หรือ แก้ที่นี่ก็ได้เหมือนกัน ตัวผมแก้ที่นี่แล้วกันนะ</p>

<h3 id="การตั้งค่า-replicaset">การตั้งค่า ReplicaSet</h3>

<p>ทีนี้คือจุดสำคัญที่เราเฝ้ารอมานานคือการตั้ง replica set เรา uncomment ที่ replication ออกได้เลย และ เราก็เขียนเป็นชื่อ <code class="highlighter-rouge">replSetName:"อะไรก็ได้"</code> แค่ทั้ง 3 Nodes นี่ต้องตั้งให้เหมือนกันนะ ส่วนตัวเราจะใช้เป็น rs0 แล้วกัน</p>

<p><img src="/assets/internetprograming/mongo4.jpg" alt="Replication Setting" /></p>

<script src="https://gist.github.com/theethawat/45b5c5eb98dece35a77623df23bbf836.js?file=mongod.conf"></script>

<p>และเราก็ทำแบบนี้กับทั้ง 3 อัน ก่อนที่เราจะมา up compose กัน</p>

<h3 id="docker-compose-up">Docker-compose up</h3>

<p>รันคำสั่ง <code class="highlighter-rouge">sudo docker-compose up</code> หรือ <code class="highlighter-rouge">docker-compose up</code> ก็ได้ถ้าเป็น root อยู่แล้ว</p>

<p><img src="/assets/internetprograming/mongo5.jpg" alt="Docker Compose Up" /></p>

<p>จากนั้นจะพบว่าของผม Error เต็มเลย น่าจะผิดตรงตั้งค่า Docker อะไรซักอย่างเนี่ย เดี๋ยวมาเขียนต่อละกัน วันนี้หยุดก่อน</p>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html"><![CDATA[ยังไม่เสร็จนะ หลังจากที่เราพูดถึง HA หรือ High Availability และ FT หรือ Fault Tolerance กันแล้ว เราจะมาทดลองสร้างระบบดูกันว่า เออการทำงานมันเป็นอย่างไร กับระบบที่มันบอกว่าตัวเองเป็น High Availability และ Fault Tolerance ว่าตรงไหนคือ HA ตรงไหนคือ FT]]></summary></entry><entry><title type="html">Kotlin In My Note</title><link href="http://localhost:4000/it-blog/2019/09/27/introtokotlin.html" rel="alternate" type="text/html" title="Kotlin In My Note" /><published>2019-09-27T00:00:00+07:00</published><updated>2019-09-27T00:00:00+07:00</updated><id>http://localhost:4000/it-blog/2019/09/27/introtokotlin</id><content type="html" xml:base="http://localhost:4000/it-blog/2019/09/27/introtokotlin.html"><![CDATA[<p>นี่คือโน้ตที่ผมเขียนไว้ตอนผมเรียนคอทลิน ประกอบกับแอนดรอยด์ไปด้วย เพื่อที่จะทำโปรเจกต์ของผม ผมเองก็โน้ตเก็บเป็น Markdown ไว้ แล้วก็มาเผยแพร่ให้ดู เป็นภาษาอังกฤษนะครับ ว่าง ๆ จะมาแปลไทยให้อ่าน</p>

<h2 id="คุยกันก่อน">คุยกันก่อน</h2>

<p>Kotlin เป็นภาษาตัวหนึ่งที่รันอยู่บน Java Virtual Machine(JVM) ได้ พัฒนาโดยกลุ่มที่ได้รับการสนับสนุนจากบริษัท Jetbrains ผู้พััฒนา IntelliJ Idea และ Android Studio ซึ่งผมเองต้องเขียน Android ดังนั้นผมจึงต้องมีพื้นฐาน Kotlin หน่อย ๆ Kotlin ตอนแรกเนี่ยเขาคิดว่าจะทำมาเป็น Library ของ Java แต่ตอนหลังแล้ว พอเขาคิดว่าการทำ Library พวกนี้มันต้อง Compatible กับอะไรแบบเดิม ก็เลยเขียนภาษาขึ้นมาใหม่ดีกว่า ชื่อภาษา Kotlin เป็นที่นิยม และ ตัวที่ Google เองก็เชียร์ให้เขียน Android กับ Kotlin ด้วย ถ้าใครเขียนพวก OOP อย่าง Java, C# มาก่อน Kotlin ไม่ยากครับ ง่ายกว่าแน่นอน หรือถ้าใครไม่เคยเขียน มันก็ไม่ยากนะ แค่มันอาจจะงง ๆ หน่อย ตามประสาของภาษาโปรแกรมมิ่งสมัยใหม่</p>

<h2 id="เริ่มต้นกับคอทลิน">เริ่มต้นกับคอทลิน</h2>

<p>ถ้ามว่าจะเริ่มต้นยังไงเหรอ ลองไปดูที่ https://kotlinlang.org ก็ได้ แนะนำเลยคือ ติดตั้ง IntelliJ Idea ครับ จบ หรือถ้าใช้ Ecilipse ก็ใช้ได้นะ ตอนแรกผมก็ทำกับ Ecilipse ซึ่งอาจจะต้องลง JRE หรือ JDK หรือเปล่านั้น จำไม่ได้ เพราะตอนนั้นรู้สึกว่าเครื่องผมอ่ะพร้อมอยู่แล้ว แต่ถ้ามัน Require อะไร มันคงแจ้งเตือนเรามาเองแหละครับ แต่ส่วนใหญ่ก็ไม่ค่อยมีคนเขียน Native Kotlin นะ จะเป็นการฝึกหน่อย ๆ แล้วนำไปใช้ต่อในการเขียนพวก Android หรือเว็บแอพ อะไรอย่างนี้ครับ</p>

<p>โอเค เริ่มละนะ ว่างเมื่อไหร่ เดี๋ยวมาแปลเป็นภาษาไทยให้</p>

<hr />

<h1 id="intro-to-kotlin">Intro To Kotlin</h1>

<p><b>Learn Kotlin: </b> <a href="https://kotlinlang.org/docs/reference">Official Kotlin Doc</a></p>

<p>This is only my note during learning and coding something may be mistake. At first I cannot typing in Thai in Ecilipse IDE Now I learn in IntelliJ IDEA it can type in Thai but I’m idle.</p>

<h2 id="structure">Structure</h2>

<ol>
  <li>Don’t Need a Pre-processor because Kotlin is initial itself at the begining from IDE</li>
  <li>Don’t worry about package name, It nescessory only to show that it are in the same domain. In file system they don’t show in class view but in IDE it will show you the structure of class</li>
  <li>Function Initial run with main</li>
  <li>No Semicolon needed in Kotlin</li>
</ol>

<h2 id="table-of-content">Table of Content</h2>

<ol>
  <li><a href="#basic-syntax">Basic Syntax</a></li>
  <li><a href="#function">Function</a></li>
  <li><a href="#variable">Variable</a></li>
  <li><a href="#string-management">String Management</a></li>
  <li><a href="#array">Array</a></li>
  <li><a href="#class">Class</a></li>
</ol>

<hr />

<h2 id="basic-syntax">Basic Syntax</h2>

<h3 id="printing-out-the-word">printing out the word</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>//using print or println
print("Hello World")
</code></pre></div></div>

<h3 id="printing-out-the-value-of-variable">printing out the value of variable</h3>

<p>It can be inside the double quote with $ sign using variable Name</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>print(" $variablename ")
//If have any calculating
print(" ${variableName1 + variableName2}")
</code></pre></div></div>

<hr />

<h2 id="function">Function</h2>

<ul>
  <li>To call using like in C Language</li>
  <li>Using <b>fun</b> to initial the function</li>
</ul>

<h3 id="function-prototype">Function Prototype</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fun functionName(parameterName:ParameterType): Returntype{
}
</code></pre></div></div>

<p>Example for Very Basic Function (don’t have return)</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fun sum(a:Int,b:Int){
	println("a is $a  b is $b")
}
</code></pre></div></div>

<h3 id="call-function-to-use-return-value">Call function to use Return Value</h3>

<p>In variable define or redefine</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	var x = functionName(Parameter)
	var y:Int
	y = functionName(Parameter)
</code></pre></div></div>

<p>Beware Function and Properties are not the same</p>

<h3 id="using-the-properties">Using the properties</h3>

<p>In Properties we use to get something from variable you can using Kotlin Library properties</p>

<h4 id="calling-properties">Calling Properties</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	var testLengthVariable = "Theethawat"
	var theethawatLength ="Theethawat".length
</code></pre></div></div>

<h4 id="or-calling-in-print-statement">Or calling in print statement</h4>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	println("Variable of testLengthVariable is ${testLengthVariable.length}")
</code></pre></div></div>

<hr />

<h2 id="variable">Variable</h2>

<ul>
  <li>Using <b>val</b> can be assign a value only once</li>
  <li>Using <b>var</b> can be reassign</li>
  <li>Can use both Type define or not, if you not define a type you must initial value in the declare variable part and Kotlin will assign the type automatically</li>
  <li>Type Define and value Define is optional All are correct</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var a:Int =1
var a = 2
var a:Int
</code></pre></div></div>

<ul>
  <li>This is example that <b>Incorrect</b></li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var a
</code></pre></div></div>

<ul>
  <li>Variable can define both in global and local (Private to function) if it be global it can be modify by any function without re parameter-initial like</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var x = 0
fun incrementX() {
   x += 1
}
</code></pre></div></div>

<hr />

<h2 id="string-management">String Management</h2>

<h3 id="triming-margin">Triming Margin</h3>

<table>
  <tbody>
    <tr>
      <td>Can use trimMargin using with prefix ‘</td>
      <td>’ only if use another prefix using trimMargin(‘Prefix’)</td>
    </tr>
  </tbody>
</table>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>val str3 = """ #Hello World""".trimMargin()
val str4 = """ #Hello World """.trimMargin("#")
</code></pre></div></div>

<p>Can use <code class="highlighter-rouge">.trimIndent</code> for trim white space before text like a white space
and Can use triple quote “”” for let string in the string can be multiple line as we code</p>

<hr />

<h2 id="array">Array</h2>

<h3 id="array-declaring">Array Declaring</h3>

<p>Can Creating Array with Initial Value , Initial Value Using Function or Uninitialized using normal form <code class="highlighter-rouge">arrayOf</code>
if you initial value</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>val a = intArrayOf(11,13,15,17,12)
</code></pre></div></div>

<p>or using Specific type of Array</p>

<ol>
  <li>BooleanArray <code class="highlighter-rouge">booleanArrayOf(true, false)</code></li>
  <li>ByteArray <code class="highlighter-rouge">byteArrayOf(1, 2, 3)</code></li>
  <li>CharArray <code class="highlighter-rouge">charArrayOf('a', 'b', 'c')</code></li>
  <li>DoubleArray <code class="highlighter-rouge">doubleArrayOf(1.2, 5.0)</code></li>
  <li>FloatArray <code class="highlighter-rouge">floatArrayOf(1.2, 5.0)</code></li>
  <li>IntArray <code class="highlighter-rouge">intArrayOf(1, 2, 3)</code></li>
  <li>LongArray <code class="highlighter-rouge">longArrayOf(1, 2, 3)</code></li>
  <li>ShortArray <code class="highlighter-rouge">shortArrayOf(1, 2, 3)</code></li>
</ol>

<p>or can design array by using function like</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>val asc = Array(5,init = {i-&gt;i+1})
 for (b in asc){
     println(b)
 }
</code></pre></div></div>

<h3 id="array-properties">Array Properties</h3>

<ol>
  <li>Properties that can use when declare an Array
<code class="highlighter-rouge">sortedArray(), sortedArrayDescending()</code></li>
  <li>Properties that can use when we using function
<code class="highlighter-rouge">sort(), sortDescending() , min(), max(),first(), last()</code> it will return a view of the things
that you want in array (some only for Int or Number Variables)
for example
println(“List of Array B is ${b.sorted()}”)</li>
</ol>

<h3 id="collection">Collection</h3>

<p>Collection is like array but it’s the tool that can easier management</p>

<ul>
  <li>
    <p>List use <code class="highlighter-rouge">Listof()</code> (Can replace string with other type)</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>val  myList = listOf&lt;String&gt;("Theethawat","Songpon")
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map use <code class="highlighter-rouge">mapOf()</code></p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> val myMap = mapOf&lt;Int,String&gt;(Pair(1,"Theethawat"), Pair(2,"Theematach"))
</code></pre></div>    </div>
  </li>
  <li>
    <p>Set use <code class="highlighter-rouge">setOf()</code></p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>val mySet = setOf&lt;String&gt;("Theethawat","Sirinuch")
</code></pre></div>    </div>

    <p>using 3 types of collection and other type of Array can be random access</p>
  </li>
</ul>

<hr />

<h2 id="class">Class</h2>

<h3 id="basic-concept-of-class">Basic Concept of Class</h3>

<ul>
  <li>It’s like class in Java and sometime it’s like stucture in C
in my own opinion</li>
  <li>Use function (main or any) to call a class</li>
  <li>If Compare to Java it has 3 part
    <ul>
      <li>Field for variable declare and initial (Java divide into
field and Constructor) and can use argument <code class="highlighter-rouge">also()</code> to make this variable call the function like <code class="highlighter-rouge">val nameInput = "The Input value is $name".also(::println)</code></li>
      <li><code class="highlighter-rouge">init()</code> can use for initial, set value and call function in class</li>
      <li>function <code class="highlighter-rouge">fun()</code></li>
    </ul>
  </li>
  <li>Everythings contain public, protected, private same like other OOP</li>
  <li>Can use dot(.) for go to the attribute like in C or Java</li>
  <li>For Example in file Address.kt</li>
</ul>

<hr />

<h2 id="object">Object</h2>

<h3 id="companion-object">Companion object</h3>

<p>If your class have a Companion object show that you can implement or adding the function to that object like</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class MyClass {
	companion object { }  // will be called "Companion"
	}

	fun MyClass.Companion.printCompanion() { println("theethawat") }

	fun main() {
	MyClass.printCompanion()
	}
</code></pre></div></div>

<p>You will got an output “Theethawat”, i pick it from official Document at <a href="https://kotlinlang.org/docs/reference/object-declarations.html#companion-objects">Object Documents in Kotlin</a></p>

<hr />

<h2 id="basic-function-and-library">Basic Function and library</h2>

<ul>
  <li>Kotlin will add Basic Library name kotlin.* if you use IDE or compiler</li>
  <li>There include many function inside</li>
  <li>String Function Reference is located at <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">Kotlin Function Reference</a></li>
</ul>]]></content><author><name>Theethawat Savastham</name></author><category term="it-blog" /><summary type="html"><![CDATA[นี่คือโน้ตที่ผมเขียนไว้ตอนผมเรียนคอทลิน ประกอบกับแอนดรอยด์ไปด้วย เพื่อที่จะทำโปรเจกต์ของผม ผมเองก็โน้ตเก็บเป็น Markdown ไว้ แล้วก็มาเผยแพร่ให้ดู เป็นภาษาอังกฤษนะครับ ว่าง ๆ จะมาแปลไทยให้อ่าน]]></summary></entry><entry><title type="html">ชีวิตแบบเป็ด ๆ ของโปรแกรมเมอร์บ้า ๆ บอ ๆ คนนี้</title><link href="http://localhost:4000/life/2019/09/14/programingday.html" rel="alternate" type="text/html" title="ชีวิตแบบเป็ด ๆ ของโปรแกรมเมอร์บ้า ๆ บอ ๆ คนนี้" /><published>2019-09-14T00:00:00+07:00</published><updated>2019-09-14T00:00:00+07:00</updated><id>http://localhost:4000/life/2019/09/14/programingday</id><content type="html" xml:base="http://localhost:4000/life/2019/09/14/programingday.html"><![CDATA[<p>ผมเป็นคนนึงที่ใช้ชีวิตแบบ Duck Learning มาก จึงเป็นที่มาของไอ เดอะดักส์ครีเอเตอร์นี่ไง ดักส์คืออะไรนั่นเหรอ คือทำนุ่นทำนี่เล็ก ๆ น้อย ๆ ได้หลายอย่าง แต่ไม่เก่งซักอย่าง บทความนี้สาระไม่ค่อยมีนะครับ เน้นระบาย อ่านรู้เรื่องก็อ่านนะครับ</p>

<h2 id="ไหน-ๆ-แล้วก็รู้จักผมซะเลย">ไหน ๆ แล้วก็รู้จักผมซะเลย</h2>

<p><img src="/assets/profile/tin.jpg" alt="รูปผมเองแหละ" /></p>

<p>ผมชื่อตินครับ ธีร์ธวัช สวาสดิ์ธรรม ครับ อายุ 21 ปี ตอนนี้เรียนอยู่วิศวะคอมปี 4 วิชาโท Network Engineering ซึ่งผมบอกเลยว่า <i>“ผมคอนฟิกส์เน็ตเวิร์คไม่ค่อยเป็น TTT 5555”</i> มาเข้าสายนี้ทำไมเนี่ย แต่จริง ๆ มันก็สนุกดีนะ ผมเองก็เป็นคนสนใจการทำโปรแกรมแบบ Micro Service เช่นพวก Javascript,TypeScript พวก MongoDB, Firebase, ElectronJS อะไรพวกนี้ ยิ่งไอ Electron + TypeScript เป็น Stack ที่ผมอยากทำมาก
แล้วก็พวก Cloud ต่าง ๆ แล้วมีแอบสนใจสาย .NET Framework ของ Microsoft ด้วย ผมยังชอบการทำ Server ด้วยนะ ตอนนี้ผมมี Digital Ocean อยู่ 1 Droplet เป็น Ubuntu และเคยมี VM Windows Server ที่ Azure อยู่ มันเป็นของฟรีที่มหาวิทยาลัยให้มา แต่ตอนนี้ลบไปละ เพราะไม่ได้ใช้ และถึงจะให้ใช้ฟรีแบบไม่ต้องกรอกบัตรเครดิต แต่มันก็ให้เราในรูปแบบเครดิต คือ ให้เครดิตเราประมาณ 100USD มั้ง คนที่ใช้ Cloud พวกนี้น่าจะรู้ดี ก็ถ้าเราปล่อย Virtual Machine (จำไม่ได้แล้วเขาเรียกว่ายังไงใน Azure) มันก็จะกินเครดิตไปด้วย โดยที่เราไม่ได้ใช้ ดังนั้นเบรกไว้ก่อน ใน Digital Ocean ผมคอนฟิก DNS เองนะคร้าบ (เออ แล้วไงมันยากตรงไหนเหรอ 5555) ใน Windows Server ก็เหมือนกัน เคยใช้มาหมดแล้วทั้ง Apache, Nginx, IIS แต่นั่นแหละ รู้แค่พื้น ๆ กลับมาที่หัวข้อ ก็ยังคงเป็นเป็ดเหมือนเดิม</p>

<h2 id="ก็มัน-distributed-อ่ะ">ก็มัน Distributed อ่ะ</h2>

<p>มันคือการทำโปรแกรมแบบ Distributed Computing การประมวลผลแบบ Client-Server หรือ Distributed อื่นๆ และผมรู้สึกว่ามันยิ่งใหญ่ดี ถึงแม้จะต้องทำอะไรที่ยากกว่าสาย Infomation Engineering เพราะผมเองไม่ถนัดการทำงานให้มันมี Performance สูง ๆ ขนาดนั้น ผมรู้สึกว่าเน็ตเวิร์ค ซึ่งมีวิชาเลือกในสายแค่ 4 + 1 ถึง 2 ตัว แล้วผมก็ได้ความรู้ด้านโปรแกรมมิ่งจากวิชาอื่นมาพอสมควรละ มันเป็นเรื่อง ๆ ที่เป็น Core เพราะถ้าจะให้เขาสอนเราทุกเรื่อง มันเป็นไปไม่ได้ ภาษาคอมพิวเตอร์มันจะออกใหม่ทุก ๆ สัปดาห์อยู่แล้ว อันนี้ที่เขียนอยู่นี่ก็ทำบน Ruby Stack ทั้ง ๆ ที่ผมเองไม่รู้เรื่อง Ruby เลย แต่ก็เอา Jekyll ซึ่งเป็นเฟรมเวิร์คการเขียนบล็อกตัวหนึ่งซึ่งได้รับความนิยมมากพอสมควรมาใช้ แล้วก็ทำตามคอมมานด์ ตาม Doc, Tutorial ไป เออ ได้</p>

<p>แต่พอจะมา deploy บน Server ตัวเอง เอ้าาา ทำไงวะ จะ deploy แบบไหนดี แบบ Docker Container หรือ สร้าง Ruby Server แต่เหนือสิ่งอื่นใดคือผมยังจัดการไอ Reverse Proxy ของไอ nginx ไม่เป็นเลยเนี่ย จะทำนู่นทำนี่ ล่มเพราะ Reverse Proxy Nginx ไม่ได้เนี่ยแหละ คือไงอะ โอเคเราไม่พูดในเทอมเทคนิคมากแล้วกัน สุดท้ายก็ใช้ GitHub Page เอาแล้วกันง่ายสุด</p>

<p><b><i>Reverse Proxy คือการเปลี่ยนจากการปล่อยแอพพลิเคชั่นที่พอร์ตอื่น ๆ เช่น dev.theduckcreator.in.th:3000 มาเป็นพารามิเตอร์ในโดเมนแทน เช่น dev.theduckcreator.in.th/serv3 อะไรอย่างงี้</i></b></p>

<p>จริง ๆ Reverse Proxy ไม่ใช่มีหน้าที่ หรือ Feature แค่นี้นะ มันมีตั้งหลายแบบ เช่น handle file ตามนามสกุล อะไรหลาย ๆ อย่าง ถ้าสนใจไปลองอ่านที่เว็บของ Nginx หรือ Apache Webserver ดูนะครับ ผมก็ตอบไม่ได้ ต้องการคำตอบเหมือนกัน</p>

<h2 id="เนี่ยนอกเรื่องไปไกลแล้ว-กลับๆๆ">เนี่ยนอกเรื่องไปไกลแล้ว กลับๆๆ</h2>

<p>ถ้าให้นิยามตัวเอง ผมว่าผมเองเป็นคนที่ไม่เก่งนะ ไม่ขยันด้วย แต่ทำอะไรด้วย Passion ได้ดี ผมว่ามันน่าจะเป็นอะไรหลาย ๆ อย่างที่ Developer (นี่กล้าเรียกตัวเองว่า Dev แล้วเหรอนี่) เป็นมั้ง ผมมักจะคิดอะไรใหม่ ๆ แปลก ๆ ได้เสมอ เช่น ผมทำ QR Code Random Congrat หรือ แม้ตอนหลัง Server เก่าผม Inodes เต็มซะก่อนสุดท้ายก็ต้องมาใช้ HTML ธรรมดา แต่คนที่ได้รับเขาก็มีความสุขและประทับใจอยู่นะ ดู ๆ จริง ๆ แล้วผมเป็น Network Engineer Student นะ แต่ Config ห่าอะไรไม่เป็นเลย…… ล้อเล่น มันก็พอเป็นบ้างแหละ สิ่งที่ผมชอบจริง ๆ น่าจะเป็น Software in Networking ประมาณนี้มากกว่า</p>

<h2 id="duck-หรือ-เป็ด-คือ-ทำเป็นได้หลายอย่าง-แต่อาจจะไม่โดดเด่นซักอย่าง">Duck หรือ เป็ด คือ ทำเป็นได้หลายอย่าง แต่อาจจะไม่โดดเด่นซักอย่าง</h2>

<p>ถ้าเปรียบผมเหมือนโนบิตะ ผมก็คล้าย ๆ อยู่นะ คือเออก็ไม่เก่ง กีฬาเนี่ยยิ่งห่วยเลย แต่ไอโนบิตะมันยังมีความรัก แล้วก็มีพลังอยู่ แต่ผมเป็นแบบถ้าเรื่องนี้ผมชอบ ผมทำ ยาว ๆ ก็ได้นะ ผมทำทั้ง Arduino, Raspberry Pi, NodeMCU คือเคยเอามาทำ IoT ที่บ้านครับ แล้วก็มาต่อไฟ เพื่ออำนวยความสะดวกให้กับตัวเอง เอ้า เจ๋งป่าวหละ แต่ในทางกลับก็เขียน พอเขียนได้ หลายภาษาอยู่นะ (พอเปิด Doc) อ่านรู้เรื่องอ่ะ แต่นั่นแหละ ไม่เก่งซักเรื่อง Python ก็ไม่เป็น (ภาษาอะไรวะ โคตรฮิตเลย) , ภาษาตระกูล OOP พวก Java, Kotlin, C# ก็พอเป็นบางส่วน เน็ตเวิร์ค คลาวด์คอมพิวติ้ง ก็รู้บางส่วน เออ แล้วอยากทำอะไรก็ทำ นั่นสิ แล้วไม่ให้เรียกว่าเป็ดแล้วเรียกอะไรหละครับ</p>

<h2 id="โอกาสไม่ได้มาหลายคลั้ง-บางทีต้องตอนนั้นเท่านั้น">โอกาสไม่ได้มาหลายคลั้ง บางทีต้องตอนนั้นเท่านั้น</h2>

<p>เป็นสิ่งที่ผมพบมาจริงเลยคีอบางทีโอกาสมันมา แต่เราทำให้ไม่ทัน เช่น ตอนทำ Congrat ปี 2562 ที่ผ่านมาเตรียมดอกไม้มาอย่างดี มน้ำดืมให้คนละขวด แล้วก็เออ ว่าจะทำกับ Firebase ครั้งนี้ดีไซด์ UI ก่อนด้วย ทำกับ React ซึ่งเป็นการแก้เข็ดงานที่ตอนทำ QR Code Congrat แรก ๆ ปัญหามีอยู่ว่า มันเป็นงานรับปริญญาเว้ย แล้วมันอาจจะ เข้าใจมั้ยว่าบางทีนั้น ความพิเศษมันก็อยู๋ในวันนั้นนั่่นแหละ แล้วไม่เสร็จ เรามีพี่ ๆ หลายคนที่รู้จัก คืนก่อนนั่งทำถึงประมาณตี 2 แล้วนอน ตื่นมา 7 โมง ทำต่อ ซึ่งจริง ๆ เนี่ย วันรับปริญญาเนี่ยถ้าจะไปแสดงความยินดีเขาให้ไปเช้า ๆ แต่สุดท้าย ยังไงมันก็ไม่เสร็จอยู่ดี ก็เลยโอเค ตัดสินใจเลิก ประมาณซัก 9 โมงกว่า ๆ แต่ไปถึงก็สิบโมงได้ ซึ่งก็ไม่ค่อยทันแล้ว พอจะไปถ่ายรูปได้แค่กับพี่รหัส และ พี่เทคกรุ๊ปแค่นั้น ดังนั้นเนี่ย การทำงานในเวลาเร่งด่วน บางทีการเรียนรู้ใหม่ หรือการลองของใหม่มันก็อาจจะไม่ถูกต้องซะทีเดียว</p>

<h2 id="ทำนู่นทำนี่ไม่เก่งไม่เป็นไร-แต่ความเสถียร-จำเป็นนะ">ทำนู่นทำนี่ไม่เก่งไม่เป็นไร แต่ความเสถียร จำเป็นนะ</h2>

<p>คนเป็นเรื่องที่เถียงไม่ขึ้นสำหรับคนเป็ด ๆ อย่างผม ก็คือ แล้วถ้าเราได้รับโจทย์ที่ต้องการเสถียรภาพสูงหละ เราจะทำยังไง เราจะลองนู่นลองนี่อ่ะ เป็นเรื่องดี แต่สุดท้าย มันต้องมีซักภาษาป่าวว่ะ หรือ ซักเรื่องป่าววะ ที่เราสามารถทำให้เป็นระดับ Enterprise ได้ เขาสามารถจ้างเราทำได้ ทุกคนว่าจริงมั้ย ยังไงก็เป็นกำลังใจให้ผมด้วยละกันนะครับ น้อ ฝากติดตามผลงานด้วย จบดื้อ ๆ แบบนี้เลยเหรอ เออ ใช่สิ</p>]]></content><author><name>Theethawat Savastham</name></author><category term="life" /><summary type="html"><![CDATA[ผมเป็นคนนึงที่ใช้ชีวิตแบบ Duck Learning มาก จึงเป็นที่มาของไอ เดอะดักส์ครีเอเตอร์นี่ไง ดักส์คืออะไรนั่นเหรอ คือทำนุ่นทำนี่เล็ก ๆ น้อย ๆ ได้หลายอย่าง แต่ไม่เก่งซักอย่าง บทความนี้สาระไม่ค่อยมีนะครับ เน้นระบาย อ่านรู้เรื่องก็อ่านนะครับ]]></summary></entry></feed>